{"version":3,"sources":["reducers/loginReducer.js","context/LoginContext.js","components/auth/Login.js","components/auth/Signup.js","components/healthworkers/charts/PatientsChart.js","components/healthworkers/charts/HealthworkersChart.js","components/healthworkers/charts/PatientCitiesChart.js","components/healthworkers/Dashboard.js","components/healthworkers/Profile.js","components/healthworkers/Healthworkers.js","reducers/patientReducer.js","context/PatientContext.js","components/patients/Patients.js","components/patients/Bio.js","components/patients/Metrics.js","components/patients/Symptoms.js","components/patients/Diagnostics.js","reducers/menuReducer.js","context/MenuContext.js","components/auth/SignedOut.js","components/main/Main.js","App.js","index.js"],"names":["loginReducer","state","action","type","localStorage","setItem","JSON","stringify","login","healthworker","id","fname","lname","token","clear","LoginContext","createContext","LoginContextProvider","props","useReducer","dispatch","Provider","value","children","mytextcolor","indigo","api","axios","create","baseURL","process","useStyles","makeStyles","theme","root","control","padding","spacing","textAlign","margin","textcolor","color","backdrop","zIndex","drawer","Login","classes","useContext","useState","email","setEmail","password","setPassword","history","useHistory","React","open","setOpen","iserror","setIserror","errorMessage","setErrorMessage","showform","setShowform","amount","weight","weightRange","showPassword","values","setValues","handleSignUpClicked","e","preventDefault","push","useEffect","storedUser","parse","window","getItem","className","Grid","container","item","xs","Backdrop","CircularProgress","Paper","Alert","severity","style","Divider","TextField","marginTop","marginBottom","required","fullWidth","clsx","textField","label","variant","onChange","target","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","event","edge","labelWidth","FormHelperText","Button","post","contact","then","res","data","_id","setTimeout","catch","error","response","message","fontWeight","fontSize","Link","href","api_header","headers","Authorization","formControl","minWidth","Signup","setFname","setLname","countries","setCountries","country","setCountry","cities","setCities","city","setCity","passConfirmed","setPassConfirmed","errorMessages","setErrorMessages","successMessage","setSuccessMessage","success","setSuccess","valuesP","setValuesP","get","countryObj","countryList","forEach","name","sort","includes","map","msg","i","key","helperText","Autocomplete","newValue","options","width","getOptionLabel","option","renderInput","params","d","errMsg","undefined","length","test","String","toLowerCase","validateEmail","dataToAdd","first_name","last_name","activated","created_at","Date","updated_at","console","log","PatientsChart","patients","colors","height","strokeDasharray","dataKey","offset","angle","y","stroke","fill","p","HealthworkersChart","healthworkers","top","right","bottom","left","strokeWidth","PatientCitiesChart","Dashboard","match","setPatients","setHealthworkers","setOpencity","cityList","patientCities","returnedPatientCities","frequency","Map","Set","x","filter","patient","freq","patientCountries","healthworkerCountries","patientCountryFreq","healthworkerCountryFreq","hw","frequencyHw","err","NativeSelect","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Profile","setId","firstname","setFirstname","setData","dob","setDob","isuser","setIsuser","tblcolumns","title","field","hidden","lookup","editComponent","utils","DateFnsUtils","DatePicker","disableFuture","format","handleDateChange","Select","MenuItem","date","currentId","loggedinId","tableData","gender","DOB","phone","handleRowUpdate","newData","oldData","resolve","tempCountry","tempCity","data_updated","patch","updatedHealthworker","updatedRowData","newTableData","indexOf","hour","getHours","greet","search","paging","icons","columns","editable","onRowUpdate","Promise","components","Toolbar","maxHeight","input","marginLeft","flex","iconButton","Healthworkers","workers","setWorkers","page","setPage","rowsPerPage","setRowsPerPage","alignItems","justify","direction","component","searchDiv","InputBase","placeholder","inputProps","query","returnedData","divider","orientation","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","align","Box","m","TableBody","slice","worker","hover","role","tabIndex","maxInitials","size","round","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","patientReducer","num_metrics","num_symptoms","num_diagnostics","PatientContext","PatientContextProvider","patientData","dispatchPatient","h1color","pink","Patients","setFilteredPatients","setFullname","render","rowData","getFirstname","getLastname","get_id","actions","icon","icon_color","tooltip","handleRedirect","onRowAdd","reject","newRow","created_by","updated_by","addedPatient","createdPatient","rowToAdd","handleRowAdd","patient_id","updatedPatient","Bio","useLocation","setName","convertTo2dp","num","Math","toFixed","Metrics","setPatient","lastname","metrics","metric","bmi","BMI","weight_status","pregnant","pregnancy_status","blood_group","smoking","smoking_status","drinking_alcohol","current_alcohol_drinking","comorbidity","answer","cormorbidity_details","details","testing_indication","indication_for_testing","maxWidth","w","h","createdAnthropometric","metric_id","updatedMetric","onRowDelete","Symptoms","symptom","setSymptom","symptoms","onset","admission","handleAdmissionDateChange","discharged","handleDischargedDateChange","setSymptoms","setSymptomClasses","symptomClass","setAdmission","setDischarged","setOnset","patient_symptoms","symp","symptom_class","outcome","location","duration","admission_date","discharged_death_date","comment","createdSymptoms","symptom_id","updatedSymptoms","Diagnostics","diagnostic","setDiagnostic","diagnostics","diagnosticDate","setDiagnostics","setDiagnosticDate","patient_diagnostics","diag","diagnostic_date","createdDiagnostic","diagnostic_id","updatedDiagnostics","menuReducer","num_doctors","num_patients","MenuContext","MenuContextProvider","dispatched","SignedOut","getFullYear","mybgcolor","mybgcolorAppbar","dashboardListItem","display","appBar","transition","transitions","easing","sharp","leavingScreen","backgroundColor","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","flexShrink","drawerPaper","listItems","borderRadius","listItemDone","nested","nestedDone","logo","drawerHeader","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Main","openNested","setOpenNested","patientMenu","setShowPatientMenu","patientId","setPatientId","logout","setLogout","countPatient","setCountPatient","countDoctors","setCountDoctors","setHealthworker","countMetrics","setCountMetrics","countSymptoms","setCountSymptoms","countDiagnostics","setCountDiagnostics","profileClicked","setProfileClicked","dashClicked","setDashClicked","doctorClicked","setDoctorClicked","patientClicked","setPatientClicked","bioClicked","setBioClicked","metricClicked","setMetricClicked","symClicked","setSymClicked","diaClicked","setDiaClicked","mySwitch","useTheme","pathname","userToken","startsWith","path_data","split","CssBaseline","AppBar","Typography","noWrap","Drawer","anchor","paper","List","paddingRight","ListItem","button","ListItemIcon","ListItemText","primary","Badge","badgeContent","Collapse","in","timeout","unmountOnExit","exact","path","HealthWorkers","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b54a6196.chunk.js","sourcesContent":["\nexport const loginReducer = (state, action) => {\n    switch(action.type){\n        case 'LOGIN':\n            localStorage.setItem(\"login\", JSON.stringify({\n                login: action.healthworker.login,\n                id: action.healthworker.id,\n                fname: action.healthworker.fname,\n                lname: action.healthworker.lname,\n                token: action.healthworker.token\n            })); \n\n            return {\n                ...state,\n                login: action.healthworker.login,\n                id: action.healthworker.id,\n                fname: action.healthworker.fname,\n                lname: action.healthworker.lname,\n                token: action.healthworker.token\n              };\n\n        case 'LOGOUT':\n            localStorage.clear();\n            return {\n                ...state,\n                login: false,\n                id: '',\n                token: '',\n                fname: '',\n                lname: ''\n            };\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer} from 'react';\nimport { loginReducer } from '../reducers/loginReducer';\n\nexport const LoginContext = createContext();\n\nconst LoginContextProvider = (props) => {\n\n    const [healthworker, dispatch] = useReducer(loginReducer, []);\n    return (\n        <LoginContext.Provider value={{healthworker, dispatch}}>\n            {props.children}\n        </LoginContext.Provider>\n    )\n}\n\nexport default LoginContextProvider;","import React, { useContext, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { useEffect } from 'react'\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom';\nimport { LoginContext } from '../../context/LoginContext';\n\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport { indigo } from '@material-ui/core/colors';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Link from '@material-ui/core/Link'\nimport Alert from '@material-ui/lab/Alert';\n\n\nconst mytextcolor = indigo[\"900\"];\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_MY_HOST\n})\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n        \n    },\n    control: {\n      padding: theme.spacing(5),\n      textAlign: \"center\",\n      margin: theme.spacing(5)\n    },\n    textcolor: {\n      color: mytextcolor\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n\n  }));\n  \n\nconst Login = () => {\n    const classes = useStyles();\n    const { dispatch } = useContext(LoginContext);\n    const[email, setEmail] =  useState('john.doe@gmail.com');\n    const[password, setPassword] =  useState('password');\n    const history = useHistory();\n    //backdrop\n    const [open, setOpen] = React.useState(false);\n    //error\n    const [iserror, setIserror] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const [showform, setShowform] = useState(false)\n\n    const [values, setValues] = React.useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword: false,\n    });\n  \n    const handleClickShowPassword = () => {\n      setValues({ ...values, showPassword: !values.showPassword });\n    };\n  \n    const handleMouseDownPassword = (event) => {\n      event.preventDefault();\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        setOpen(true)\n        api.post('/healthworkers/login', {contact: {email: email}, password: password})\n            .then(res => {\n                //store login details in local storage\n                dispatch({type: 'LOGIN', healthworker:{login: true, id: res.data._id, token: res.data.token, fname: res.data.fname, lname: res.data.lname}});\n                setIserror(false)\n                setErrorMessage(\"\")\n\n                //get healthwork and patient count\n                const userToken = {\n                  headers: {\n                    Authorization: \"Bearer \" + res.data.token\n                  }\n                }\n\n                setTimeout(() => {\n                  setEmail('');\n                  setPassword('');\n                  history.push(\"/dashboard/\"+res.data._id)\n              }, 500);\n\n                \n             })\n             .catch(error => {\n                dispatch({type: 'LOGOUT'});\n                \n                setTimeout(() => {\n                  setOpen(false)\n                  setIserror(true)\n\n                  if(error.response && error.response.data.message === \"Not activated\"){\n                    setErrorMessage(\"Your account is not Activated yet. Activation process is ongoing and you'll be informed by email when your account is activated\")\n                  }else{\n                    setErrorMessage(\"Auth failure! Please create an account or consider recovering your password.\")\n                  }\n                  \n                }, 500);\n                \n             })\n    }\n\n    const handleSignUpClicked = (e) => {\n      e.preventDefault();\n      history.push(\"/signup\")\n    }\n\n    useEffect(() => {\n      const storedUser = JSON.parse(window.localStorage.getItem('login'));\n      if(storedUser){\n        setShowform(false)\n        history.push(\"/dashboard/\"+storedUser.id)\n      }else{\n        setShowform(true)\n      }\n    }, [])\n\n    return ( \n        <div className={classes.root}>\n            {showform &&\n            <Grid container className={classes.root} spacing={2}>\n            \n              <Grid item xs={3}>\n                \n              <p>\n              </p>\n              </Grid>\n\n              <Grid item xs={6}>\n            \n              <div>\n                <Backdrop className={classes.backdrop} open={open}>\n                  <CircularProgress color=\"inherit\" />\n                </Backdrop>\n              </div>\n\n              <Paper className={classes.control}>\n                <div>\n                  {iserror && \n                      <Alert severity=\"error\">\n                          {errorMessage}\n                      </Alert>\n                  }\n                  \n                </div>\n\n                <h1 style={{color: mytextcolor}}>Sign in to your account</h1>\n                \n                <Divider />\n                <p>Get a bird's eye view on patients across countries</p>\n                <Divider />\n                <form>\n                  <TextField style={{marginTop: 30, marginBottom: 30}} required={true} fullWidth={true} className={clsx(classes.margin, classes.textField)} id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                  <FormControl style={{marginBottom: 30}} fullWidth={true} className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                      <OutlinedInput\n                          id=\"outlined-adornment-password\"\n                          type={values.showPassword ? 'text' : 'password'}\n                          value={password}\n                          onChange={(e) => setPassword(e.target.value)}\n                          required={true}\n                          endAdornment={\n                          <InputAdornment position=\"end\">\n                              <IconButton\n                              aria-label=\"toggle password visibility\"\n                              onClick={handleClickShowPassword}\n                              onMouseDown={handleMouseDownPassword}\n                              edge=\"end\"\n                              >\n                              {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                              </IconButton>\n                          </InputAdornment>\n                          }\n                          labelWidth={70}\n                      />\n                      <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n                  </FormControl>\n                  <p style={{marginBottom: 30}}>By clicking Sign In, you agree to our Terms of Use and our Privacy Policy.</p>\n                  <Button fullWidth={true} variant=\"contained\" color=\"primary\" onClick={handleLogin}>Sign In</Button>\n                  <p style={{marginBottom: 30, fontWeight: \"bold\"}}>Forgot your password?</p>\n                  <p onClick={handleSignUpClicked} style={{marginBottom: 30, fontSize: \"medium\", fontWeight: \"bold\"}}>\n                    \n                    <Link href=\"#\" onClick={handleSignUpClicked}>\n                      Don't have an account? Sign up!\n                    </Link>\n                  </p>\n                </form>\n                </Paper>\n                \n              </Grid>\n\n              <Grid item xs={3}>\n              <p></p>\n              </Grid>\n              \n            </Grid>\n          }\n        </div>\n    );\n}\n \nexport default Login;","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios'\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport { indigo } from '@material-ui/core/colors';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Link from '@material-ui/core/Link'\nimport Alert from '@material-ui/lab/Alert';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst mytextcolor = indigo[\"900\"];\n\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nfunction api_header(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const head_element = {\n            headers: {\n                Authorization: \"Bearer \" + storedUser.token\n            }\n        }\n        return head_element\n    }else{\n        return null;\n    }\n}\n\nfunction validateEmail(email){\n    const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \n    },\n    formControl: {\n        minWidth: 120,\n    },\n    control: {\n        padding: theme.spacing(5),\n        textAlign: \"center\",\n        margin: theme.spacing(5)\n    },\n    textcolor: {\n        color: mytextcolor\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n\n}));\n  \n\nconst Signup = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [fname, setFname] = useState('')\n    const [lname, setLname] = useState('')\n    const [countries, setCountries] = useState([])\n    const [country, setCountry] = useState('')\n    const [cities, setCities] = useState([])\n    const [city, setCity] = useState('')\n    const [email, setEmail] =  useState('john.doe@gmail.com');\n    const [password, setPassword] =  useState('password');\n    const [passConfirmed, setPassConfirmed] = useState('');\n    //backdrop\n    const [open, setOpen] = React.useState(false);\n    //error\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n    const [showform, setShowform] = useState(false)\n    const [successMessage, setSuccessMessage] = useState(\"\")\n    const [success, setSuccess] = useState(false)\n\n    const [values, setValues] = React.useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword: false,\n    });\n    \n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n    };\n\n\n    const [valuesP, setValuesP] = React.useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword: false,\n    });\n\n    const handleClickShowPasswordP = () => {\n        setValuesP({ ...valuesP, showPassword: !valuesP.showPassword });\n    };\n\n    const handleMouseDownPasswordP = (event) => {\n        event.preventDefault();\n    };\n\n\n    const handleSignUp = (e) => {\n        e.preventDefault();\n        setOpen(true)\n        let errMsg = []\n        if(fname == undefined || fname.length < 2 || fname == ''){\n            errMsg.push(\"Please enter first name\")\n        }\n\n        if(lname == undefined || lname.length < 2 || lname == ''){\n            errMsg.push(\"Please enter last name\")\n        }\n\n        if(country == undefined || country == ''){\n            errMsg.push(\"Please select your country\")\n        }\n\n        if(city == undefined || city == ''){\n            errMsg.push(\"Please select your city\")\n        }\n\n        if(email === \"\" || validateEmail(email) == false){\n            errMsg.push(\"Please enter a valid email\")\n        }\n\n        if((password != undefined || password != '') && (passConfirmed != undefined || passConfirmed != \"\")){\n            if(passConfirmed === password){\n                if(password.length < 8 || passConfirmed.length < 8){\n                    errMsg.push(\"Passwords length must be at least 8 characters\")\n                }\n                if (/\\s/.test(password)) {\n                    errMsg.push(\"Passwords cannot containe whitespace(s)\")\n                }\n\n            }else{\n                errMsg.push(\"Passwords MUST match\")\n            }\n        }else{\n            errMsg.push(\"Password fields cannot be blank\")\n        }\n\n        if(errMsg.length < 1){\n            const dataToAdd = {\n                name: {\n                    first_name: fname,\n                    last_name: lname\n                },\n                contact: {\n                    email: email,\n                    country: country, \n                    city: city,\n                },\n                password: password,\n                activated: false,\n                created_at: new Date(),\n                updated_at: new Date()\n            }\n\n            api.post(\"/healthworkers/signup\", dataToAdd, api_header())\n                .then(res => {\n                    setTimeout(() => {\n                        setOpen(false)\n                        setSuccess(true)\n                        setIserror(false)\n                        setSuccessMessage(\"Congratulations!!! Your account is successfully created and we have sent you an email. Please note that it we'll need to confirm that you are a health official before Activating your account\")\n                    }, 500)\n                })\n                .catch(error => {\n                    setIserror(true)\n                    setSuccess(false)\n                    setOpen(false)\n\n                    if(error.response && error.response.data.message == \"Mail exists\"){\n                        setErrorMessages([\"Account with this email already exist! Please choose another email or recover account (if you have forgotten your password)\"])\n                    }else{\n                        setErrorMessages([\"Error creating account. Please try again later or contact Admin if error persists\"])\n                    }\n                })\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            setOpen(false)\n        }\n        \n    }\n\n    useEffect(() => {\n        const storedUser = JSON.parse(window.localStorage.getItem('login'));\n        if(storedUser){\n          setShowform(false)\n          history.push(\"/dashboard/\"+storedUser.id)\n        }else{\n          setShowform(true)\n        }\n      }, [])\n    \n      useEffect(() => {\n        setOpen(true)\n        api.get(\"/countries\", api_header())\n            .then(res => {                  \n                const countryObj = res.data\n                const countryList = []\n                countryObj.forEach(item => {\n                    countryList.push(item.name)\n                });\n                setCountries(countryList)\n                setIserror(false)\n                setErrorMessages([])\n                setTimeout(() => {\n                    setOpen(false)\n                }, 500);\n             })\n             .catch(error=>{\n                setIserror(true)\n                setErrorMessages([\"Could not load countries. Try again later and contact admin if problem persist\"])\n                setOpen(false)\n             })\n    }, [])\n\n    useEffect(() => { \n        setOpen(true)\n        if(country){\n            api.get(\"/countries/\"+country)\n            .then(res => {\n                setCities(res.data.cities.sort())\n                //change city value if the city is not in the selected country\n                if(! res.data.cities.includes(city)){\n                    setCity(res.data.cities[0])\n                }\n                setIserror(false)\n                setErrorMessages([])\n\n                setTimeout(() => {\n                    setOpen(false)\n                }, 100);\n\n                \n            })\n            .catch(error=>{\n                setIserror(true)\n                setErrorMessages([\"Could not load cities. Try again later and contact admin if problem persist\"])\n                setOpen(false)\n\n            })\n        }\n    }, [country])\n\n\n    return ( \n        <div className={classes.root}>\n            {showform &&\n            <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={3}></Grid>\n                <Grid item xs={6}>\n                    \n\n                    <div>\n                        <Backdrop className={classes.backdrop} open={open}>\n                        <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </div>\n\n                    <Paper className={classes.control}>\n                        <div>\n                            {iserror && \n                                <Alert severity=\"error\">\n                                    {errorMessages.map((msg, i) => {\n                                        return <div key={i}>{msg}</div>\n                                    })}\n                                </Alert>\n                            }\n\n                            {success && \n                                <Alert severity=\"success\">\n                                    {successMessage}\n                                </Alert>\n                            }\n                            \n                        </div>\n\n                        <h1 style={{color: mytextcolor}}>Sign Up</h1>\n                    \n                        <Divider />\n                        <p>Create an Account to get a bird's eye view of patients accross countries</p>\n                        <Divider />\n                        <form>\n\n                            <Grid container style={{marginTop: 10, marginBottom: 20}} spacing={2}>\n                                <Grid item xs={6}>\n                                    <TextField required={true} fullWidth={true} className={clsx(classes.margin, classes.textField)} id=\"outlined-basic\" label=\"First name\" variant=\"outlined\" value={fname} onChange={(e) => setFname(e.target.value)}/>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField required={true} fullWidth={true} className={clsx(classes.margin, classes.textField)} id=\"outlined-basic\" label=\"Last name\" variant=\"outlined\" value={lname} onChange={(e) => setLname(e.target.value)}/>\n                                </Grid>\n                            </Grid>\n                            <TextField style={{marginTop: 0, marginBottom: 10}} helperText=\"We'll never share your email\" required={true} fullWidth={true} className={clsx(classes.margin, classes.textField)} id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                            \n\n                            <Grid container style={{marginTop: 0, marginBottom: 20}} spacing={2}>\n                                <Grid item xs={6}>\n                                    <Autocomplete\n                                        value={country}\n                                        onChange={(e, newValue) => setCountry(newValue)}\n                                        id=\"combo-box-country\"\n                                        options={countries}\n                                        style={{width: \"100%\"}}\n                                        getOptionLabel={(option) => option}\n                                        renderInput={(params) => <TextField d=\"outlined-basic\" label=\"Country\" variant=\"outlined\" {...params}  />}\n                                    />\n\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Autocomplete\n                                        value={city}\n                                        onChange={(e, newValue) => setCity(newValue)}\n                                        id=\"combo-box-city\"\n                                        options={cities}\n                                        style={{width: \"100%\"}}\n                                        getOptionLabel={(option) => option}\n                                        renderInput={(params) => <TextField d=\"outlined-basic\" label=\"City\" variant=\"outlined\" {...params}  />}\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <Grid container spacing={2}>\n                                <Grid item xs={6}>\n                                    <FormControl style={{marginBottom: 30}} fullWidth={true} className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n                                        <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                                        <OutlinedInput\n                                            id=\"outlined-adornment-password\"\n                                            type={values.showPassword ? 'text' : 'password'}\n                                            value={password}\n                                            onChange={(e) => setPassword(e.target.value)}\n                                            required={true}\n                                            endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                                >\n                                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                            }\n                                            labelWidth={70}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <FormControl style={{marginBottom: 30}} fullWidth={true} className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n                                        <InputLabel htmlFor=\"outlined-adornment-password\">Re-password</InputLabel>\n                                        <OutlinedInput\n                                            id=\"outlined-adornment-password\"\n                                            type={valuesP.showPassword ? 'text' : 'password'}\n                                            value={passConfirmed}\n                                            onChange={(e) => setPassConfirmed(e.target.value)}\n                                            required={true}\n                                            endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPasswordP}\n                                                onMouseDown={handleMouseDownPasswordP}\n                                                edge=\"end\"\n                                                >\n                                                {valuesP.showPassword ? <Visibility /> : <VisibilityOff />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                            }\n                                            labelWidth={100}\n                                        />\n                                        \n                                    </FormControl>\n                                    \n                                </Grid>\n                            </Grid>\n\n                            <p style={{marginBottom: 20}}>By clicking Sign In, you agree to our Terms of Use and our Privacy Policy.</p>\n                            <Button fullWidth={true} variant=\"contained\" color=\"primary\" onClick={handleSignUp}>Sign Up</Button>\n                            <p style={{marginBottom: 20, fontWeight: \"bold\"}}>Forgot your password?</p>\n                            <p onClick={() => console.log(\"what\")} style={{marginBottom: 30, fontSize: \"medium\", fontWeight: \"bold\"}}>\n                                \n                                <Link href=\"#\" onClick={() => history.push(\"/login\")}>\n                                Already have an account? Login here!\n                                </Link>\n                            </p>\n                        </form>\n                    </Paper>\n                </Grid>\n                <Grid item xs={3}></Grid>\n            </Grid>\n            }\n        </div>\n    );\n}\n \nexport default Signup;","import React, { useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    ResponsiveContainer, ReferenceLine, Brush, BarChart, Label, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Cell\n  } from 'recharts';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(10)\n      },\n  }));\n\nfunction PatientsChart({ patients }){\n\n    const classes = useStyles();\n    const colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\n\n    \n    //read only form for loggout users or login users who accesses another user's page\n    return (\n        <div style={{ width: '95%', height: 300 }}>\n            <ResponsiveContainer>\n                <BarChart width={700} height={250} data={patients}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"country\">\n                        <Label value=\"Countries\" offset={-0} position=\"insideBottom\" />\n                    </XAxis>\n\n                    <YAxis label={{ value: 'No of patients', angle: -90, position: 'center' }} />\n                    \n                    <Tooltip />\n                    <ReferenceLine y={0} stroke='#000'/>\n                    {patients.length > 0 && <Brush dataKey='country' height={15} stroke=\"#ff7f0e\"/> }\n\n                    \n                    <Bar dataKey=\"patient\" fill=\"#8884d8\">\n                        {patients.map((p, i) => {\n                            return <Cell key={i} fill={colors[i % 20]}/>\n                        })}\n                    </Bar>\n                </BarChart>\n            </ResponsiveContainer>\n\n        </div>\n    )\n}\n \nexport default PatientsChart;\n\n","import React, { useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Scatter, ResponsiveContainer, ReferenceLine, Brush, ComposedChart, Legend, Area, Line, BarChart, Label, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Cell\n  } from 'recharts';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(10)\n      },\n  }));\n\n\nfunction HealthworkersChart({ healthworkers }){\n\n    const classes = useStyles();\n    const colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\n\n    \n    //read only form for loggout users or login users who accesses another user's page\n    return (\n        <div style={{ width: '95%', height: 335 }}>\n            <ResponsiveContainer>\n                <ComposedChart\n                    width={700}\n                    height={250}\n                    data={healthworkers}\n                    margin={{\n                    top: 20, right: 20, bottom: 20, left: 20,\n                    }}\n                >\n                    <CartesianGrid stroke=\"#f5f5f5\" />\n                    <XAxis dataKey=\"country\" >\n                        <Label value=\"Countries\" offset={-0} position=\"insideBottomRight\" />\n                    </XAxis>\n                    <YAxis label={{ value: 'No of patients', angle: -90, position: 'center' }} />\n                    <Tooltip />\n                    <Legend />\n\n                    <ReferenceLine y={0} stroke='#000'/>\n  \n                    {healthworkers.length > 0 && <Brush dataKey='country' height={15} stroke=\"#8c564b\"/> }\n                    \n                    <Line type=\"monotone\" dataKey=\"patient\" stroke=\"#ff7300\" strokeWidth={2}/>\n\n                    <Bar dataKey=\"healthworker\" fill=\"#8884d8\"></Bar>\n                </ComposedChart>\n\n            </ResponsiveContainer>\n\n        </div>\n    )\n}\n \nexport default HealthworkersChart;\n\n","import React, { useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    ResponsiveContainer, ReferenceLine, Brush, ComposedChart, Label, Area, XAxis, YAxis, CartesianGrid, Tooltip, AreaChart, Legend\n  } from 'recharts';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(10)\n      },\n  }));\n\nfunction PatientCitiesChart({ cities }){\n\n    const classes = useStyles();\n    const colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\n    \n    return (\n\n    <div style={{ width: '95%', height: 300 }}>\n        <ResponsiveContainer>\n            \n        <ComposedChart\n                width={700}\n                height={250}\n                data={cities}\n                margin={{\n                top: 20, right: 20, bottom: 20, left: 20,\n                }}\n            >\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <XAxis dataKey=\"city\" >\n                    <Label value=\"Cities\" offset={-0} position=\"insideBottomRight\" />\n                </XAxis>\n                <YAxis label={{ value: 'No of patients', angle: -90, position: 'center' }} />\n                <Tooltip />\n\n                <ReferenceLine y={0} stroke='#000'/>                \n                {cities.length > 0 && <Brush dataKey='city' height={30} stroke=\"#8884d8\"/> }\n                <Area type=\"monotone\" dataKey=\"patient\" fill={colors[1]} stroke={colors[3]} />\n            </ComposedChart> \n        </ResponsiveContainer> \n    </div>\n    ) \n\n\n        {/*<div style={{ display: 'flex', width: '70%', height: 335 }}>\n            <ResponsiveContainer>\n            <AreaChart\n                width={700}\n                height={400}\n                data={cities}\n                margin={{\n                top: 10, right: 30, left: 0, bottom: 0,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"city\" >\n                    <Label value=\"Cities\" offset={-0} position=\"insideBottomRight\" />\n                </XAxis>\n                <YAxis label={{ value: 'No of patients', angle: -90, position: 'center' }} />\n                <Tooltip />\n                <Brush dataKey='city' height={30} stroke=\"#8884d8\"/> \n                <Area type=\"monotone\" dataKey=\"patient\" fill={colors[1]} stroke={colors[3]} />\n            </AreaChart></ResponsiveContainer>\n        </div> */}\n    \n}\n \nexport default PatientCitiesChart;\n\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios'\nimport Alert from '@material-ui/lab/Alert';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport PatientsChart from '../healthworkers/charts/PatientsChart'\nimport HealthworkersChart from '../healthworkers/charts/HealthworkersChart'\nimport PatientCitiesChart from '../healthworkers/charts/PatientCitiesChart'\nimport Grid from '@material-ui/core/Grid';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Divider from '@material-ui/core/Divider';\n\n\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nfunction api_header(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const head_element = {\n            headers: {\n                Authorization: \"Bearer \" + storedUser.token\n            }\n        }\n        return head_element\n    }else{\n        return null;\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \n      },\n  }));\n\nfunction Dashboard({ match }){\n\n    const classes = useStyles();\n    const [patients, setPatients] = useState([])\n    const [healthworkers, setHealthworkers] = useState([])\n    const [countries, setCountries] = useState([])\n    const [country, setCountry] = useState('Nigeria')\n    const [cities, setCities] = useState([])\n\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    //backdrop\n    const [open, setOpen] = useState(false);\n    const [opencity, setOpencity] = useState(false);\n\n\n    useEffect(() => {\n        setOpencity(true)\n        \n        const selectedCountry = country\n        //setCountry(event.target.value)\n        let cityList = []\n        let patientCities = []\n\n        api.get(\"/countries/\"+country)\n            .then(res => {\n                cityList = res.data.cities\n                return api.get(\"patients/countries/\"+country, api_header())\n            })\n            .then(res => {\n                const returnedPatientCities = res.data.patients //list of patients cities for the selected country\n\n                const frequency = new Map([...new Set(returnedPatientCities)].map(\n                    x => [x, returnedPatientCities.filter(y => y === x).length]\n                ));\n\n                for (let i = 0; i < cityList.length; i++) {\n                    let city = cityList[i]\n                    let patient = frequency.get(cityList[i])\n                    if(patient === undefined){\n                        patient = 0\n                    }\n\n                    const freq = {\n                        city: city,\n                        patient: patient,\n                    }\n                    patientCities.push(freq)\n                }\n\n                setCities(patientCities)\n                \n\n                setTimeout(() => {\n                    setIserror(false)\n                    setErrorMessages([])\n                    setOpencity(false)\n                }, 100);\n            })\n            .catch(error=>{\n\n                setIserror(true)\n                setErrorMessages([\"Could not load data. Try again later and contact admin if problem persist\"])\n                setOpencity(false)\n\n            })\n    }, [country])\n\n    useEffect(() => {\n        setOpen(true)\n        let countryList = []\n        let patientCountries = []\n        let healthworkerCountries = []\n        let patientCountryFreq = []\n        let healthworkerCountryFreq = []\n\n        api.get(\"/countries\", api_header())\n            .then(res => {\n                setCountries(res.data)\n                setCountry(res.data[0].name)\n                res.data.forEach(country => {\n                    countryList.push(country.name)\n                });\n                return api.get(\"/patients\", api_header());\n            })\n            .then(res => {\n                res.data.patients.forEach(patient => {\n                    patientCountries.push(patient.contact.country)\n                });\n                return api.get(\"/healthworkers\", api_header());\n            })\n            .then(res=>{  //healthworker result\n\n                //create patient data\n                const frequency = new Map([...new Set(patientCountries)].map(\n                    x => [x, patientCountries.filter(y => y === x).length]\n                ));\n                for (let i = 0; i < countryList.length; i++) {\n                    let country = countryList[i]\n                    let patient = frequency.get(countryList[i])\n                    if(patient === undefined){\n                        patient = 0\n                    }\n\n                    const freq = {\n                        country: country,\n                        patient: patient,\n                    }\n                    patientCountryFreq.push(freq)\n                }\n                setPatients(patientCountryFreq)\n                \n\n                //create healthworker data\n                res.data.healthworkers.forEach(hw => {\n                    healthworkerCountries.push(hw.contact.country)\n                });\n\n                const frequencyHw = new Map([...new Set(healthworkerCountries)].map(\n                    x => [x, healthworkerCountries.filter(y => y === x).length]\n                ));\n                \n                //copy previous data\n                healthworkerCountryFreq = [...patientCountryFreq]\n                for (let i = 0; i < countryList.length; i++) {\n                    let healthworker = frequencyHw.get(countryList[i])\n                    if(healthworker === undefined){\n                        healthworker = 0\n                    }\n\n                    healthworkerCountryFreq[i].healthworker = healthworker;\n                }\n                setHealthworkers(healthworkerCountryFreq)\n                setTimeout(() => {\n                    setOpen(false)\n                    setIserror(false)\n                    setErrorMessages([])\n                }, 500)\n            })\n            .catch(err => {\n                setOpen(false)\n                setIserror(true)\n                setErrorMessages([\"Could not load data. Try again later and contact admin if problem persist\"])\n            })\n        \n       \n    }, [])\n    \n    return (\n        <div className={classes.root}>\n            <Backdrop className={classes.backdrop} open={open}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <div>\n                {iserror && \n                    <Alert severity=\"error\">\n                        {errorMessages.map((msg, i) => {\n                            return <div key={i}>{msg}</div>\n                        })}\n                    </Alert>\n                }\n                        \n            </div>\n\n            <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={6}>\n                    {!open &&\n                        \n                        <PatientsChart patients = {patients} />\n                    }\n                </Grid>\n                <Grid item xs={6}>\n                    {!open &&\n                        <HealthworkersChart healthworkers = {healthworkers} />\n                    }\n                </Grid>\n\n            </Grid>\n\n            <Divider style={{margin: 20}} />\n\n            <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12}>\n                {!open &&\n                    <div style={{textAlign: \"center\"}}>\n                    \n                    <NativeSelect\n                        style={{ width: 200}}\n                        value={country}\n                        onChange={(e) => setCountry(e.target.value)}\n                        >\n                            {countries.map((item) => {\n                                return <option key={item._id} value={item.name}>{item.name}</option>\n                            })}\n                            \n                    </NativeSelect>\n                    \n                   \n                   \n                        <PatientCitiesChart cities = {cities} /> \n                        </div>\n                    }\n                    \n                \n                    \n                        \n                    \n                </Grid>\n                \n            </Grid>\n        </div>\n    )\n}\n \nexport default Dashboard;\n\n\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios'\nimport Avatar from 'react-avatar';\nimport 'date-fns';\nimport MaterialTable from \"material-table\";\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport { set } from 'date-fns';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nfunction api_header(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const head_element = {\n            headers: {\n                Authorization: \"Bearer \" + storedUser.token\n            }\n        }\n        return head_element\n    }else{\n        return null;\n    }\n}\n\nfunction greet(){\n    let hour = new Date().getHours()\n    if(hour < 12){\n        return \"Good morning\"\n    }else if(hour > 12 && hour < 16){\n        return \"Good afternoon\"\n    }else{\n        return \"Good evening\"\n    }\n}\n\nfunction get_id(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const id = storedUser.id\n        return id\n    }else{\n        return null;\n    }\n}\n\n\nfunction validateEmail(email){\n    const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n    return re.test(String(email).toLowerCase());\n}\n  \nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5)\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n  }));\n\nfunction Profile({match}){\n\n    const classes = useStyles();\n    //for navbar display\n    const [id, setId] = useState('')\n    //for form display\n    const [firstname, setFirstname] = useState('');\n    const [city, setCity] = useState('')\n    const [country, setCountry] = useState('')\n    const [cities, setCities] = useState([])\n    const [countries, setCountries] = useState([])\n    const [data, setData] = useState([]);\n    const [dob, setDob] = useState(new Date('1987-08-18T21:11:54'));\n    const [isuser, setIsuser] = useState(false) //to check if profile belongs to the logged user\n    const history = useHistory();\n\n    var tblcolumns = [\n        {title: \"id\", field: \"id\", hidden: true},\n        {title: \"First name\", field: \"fname\"},\n        {title: \"Last name\", field: \"lname\"},\n        {title: \"Gender\", field: \"gender\", lookup: {\"male\": \"male\", \"female\": \"female\", \"other\": \"other\"}},\n        {title: \"Date-of-birth\", field: \"dob\", editComponent: () => {\n            return (\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        disableFuture=\"true\"\n                        format=\"dd/MM/yyyy\"\n                        value={dob}\n                        onChange={handleDateChange}\n                        variant=\"inline\"\n                    />\n                </MuiPickersUtilsProvider>\n            )\n        }},\n        {title: \"Email\", field: \"email\"},\n        {title: \"Phone\", field: \"phone\", type: 'numeric' },\n        {title: \"Country\", field: \"country\", editComponent: () => {\n            return (\n                <Select value={country} onChange={(e) => setCountry(e.target.value)}>\n                    {countries.map((item)=> {\n                        return <MenuItem key={item._id} value={item.name}>{item.name}</MenuItem>\n                    })}\n                </Select>\n            )\n          }\n        },\n        /*{title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Select value={city} onChange={(e) => setCity(e.target.value)}>\n                    {cities.map((item, i)=> {\n                        return <MenuItem key={i} value={item}>{item}</MenuItem>\n                    })}\n                </Select>\n            )\n        }}*/\n        {title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Autocomplete\n                    value={city}\n                    onChange={(e, newValue) => setCity(newValue)}\n                    id=\"combo-box-hw-city\"\n                    options={cities}\n                    style={{ width: 150 }}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => <TextField {...params}  />}\n                />\n            )\n        }},    ]\n\n    //error\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    //backdrop\n    const [open, setOpen] = useState(false);\n\n    //date picker\n    const handleDateChange = (date) => {\n        setDob(date);\n      };\n    \n\n    useEffect(() => {\n        setId(match.params.id)\n        const currentId = match.params.id\n        const storedUser = JSON.parse(window.localStorage.getItem('login'));\n        const loggedinId = storedUser.id\n        if(currentId === loggedinId){\n            setIsuser(true)\n        }else{\n            setIsuser(false)\n        }\n    }, [isuser])\n\n    //fetch profile data\n    useEffect(() => {\n        \n        setOpen(true)\n        api.get(\"/healthworkers/\"+match.params.id, api_header())\n            .then(res => {\n                setFirstname(res.data.name.first_name)\n                const hw = res.data\n                //for material-table\n                var tableData = [];\n                tableData.push({\n                    id: hw._id,\n                    fname: hw.name.first_name,\n                    lname: hw.name.last_name,\n                    gender: hw.gender,\n                    dob: hw.DOB,\n                    email: hw.contact.email,\n                    phone: hw.contact.phone,\n                    city: hw.contact.city,\n                    country: hw.contact.country\n                })\n            \n                setTimeout(() => {\n                    setData(tableData)\n                    setIserror(false)\n                    setErrorMessages([])\n                    setOpen(false)\n                    \n                }, 500);\n\n\n             })\n             .catch(error => {\n\n                setIserror(true)\n                setErrorMessages([\"Could not load profile data. Try again later and contact admin if problem persist\"])\n                setOpen(false)\n\n             })\n    }, [])\n\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        let errMsg = []\n        if(newData.fname == \"\"){\n            errMsg.push(\"Please enter first name\")\n        }\n        if(newData.lname == \"\"){\n            errMsg.push(\"Please enter last name\")\n        }\n        if(newData.email != \"\" && validateEmail(newData.email) == false){\n            errMsg.push(\"Please enter a valid email\")\n        }\n\n        let tempCountry = \"\"\n        let tempCity = \"\"\n\n        if(country == \"\"){\n            setCountry(oldData.country)\n            tempCountry = oldData.country\n        }else{\n            tempCountry = country\n        }\n        if(city == \"\"){\n            setCity(oldData.city)\n            tempCity = oldData.city\n        }else{\n            tempCity = city\n        }\n\n        if(errMsg.length < 1){\n\n            const data_updated = [\n                {\"propName\": \"name.first_name\", \"value\": newData.fname},\n                {\"propName\": \"name.last_name\", \"value\": newData.lname},\n                {\"propName\": \"gender\", \"value\": newData.gender},\n                {\"propName\": \"DOB\", \"value\": dob},\n                {\"propName\": \"contact.city\", \"value\": tempCity},\n                {\"propName\": \"contact.country\", \"value\": tempCountry},\n                {\"propName\": \"contact.phone\", \"value\": newData.phone},\n                {\"propName\": \"contact.email\", \"value\": newData.email},\n                {\"propName\": \"updated_at\", \"value\": new Date()}\n            ]\n            \n            api.patch(\"/healthworkers/\"+id, data_updated, api_header())\n                .then(res => {\n                    var login = JSON.parse(localStorage.login);\n                    login.fname = res.data.updatedHealthworker.name.first_name\n                    login.lname = res.data.updatedHealthworker.name.last_name\n                    localStorage.setItem(\"login\", JSON.stringify(login));\n\n                    setFirstname(res.data.updatedHealthworker.name.first_name)\n\n                    const hw = res.data.updatedHealthworker\n                    const updatedRowData = {\n                        id: hw._id,\n                        fname: hw.name.first_name,\n                        lname: hw.name.last_name,\n                        gender: hw.gender,\n                        dob: hw.DOB,\n                        email: hw.contact.email,\n                        phone: hw.contact.phone,\n                        city: hw.contact.city,\n                        country: hw.contact.country\n                    }\n                    \n                    //update table\n                    const newTableData = [...data];\n                    newTableData[data.indexOf(oldData)] = updatedRowData\n                    \n                    console.log(\"I dey here\")\n                    setData(newTableData)\n                    setErrorMessages([])\n                    setIserror(false)\n\n                    setTimeout(() => {\n                        \n                        \n                        resolve()\n                    }, 500);\n                })\n                .catch(error => {\n                   \n                    setIserror(true)\n                    setErrorMessages([\"Could not update profile. Try again later and contact admin if problem persist\"])\n                    resolve()\n\n\n                })\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            resolve()\n        }\n    }\n\n    useEffect(() => { \n        api.get(\"/countries\", api_header())\n            .then(res => {\n                setCountries(res.data)\n                setIserror(false)\n                setErrorMessages([])\n             })\n             .catch(error=>{\n                setIserror(true)\n                setErrorMessages([\"Could not load countries. Try again later and contact admin if problem persist\"])\n             })\n    }, [])\n\n    useEffect(() => { \n        setOpen(true)\n        if(country){\n            api.get(\"/countries/\"+country)\n            .then(res => {\n                setCities(res.data.cities)\n                //change city value if the city is not in the selected country\n                if(! res.data.cities.includes(city)){\n                    setCity(res.data.cities[0])\n                }\n                setIserror(false)\n                setErrorMessages([])\n                setTimeout(() => {\n                    setOpen(false)\n                }, 500)\n\n            })\n            .catch(error=>{\n                \n                setIserror(true)\n                setErrorMessages([\"Could not load cities. Try again later and contact admin if problem persist\"])\n                setOpen(false)\n            })\n        }\n    }, [country])\n\n    //read only form for loggout users or login users who accesses another user's page\n    return (\n        <div className={classes.root}>\n            <Backdrop className={classes.backdrop} open={open}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n\n            {isuser \n                ?  <div>\n\n                        {!open && <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}>{greet()} {\", \" + firstname}</h1> }\n\n                        <MaterialTable\n                            options={{\n                                search: false,\n                                paging: false\n                            }}\n                            title=\"Profile\"\n                            icons={tableIcons}\n                            columns={tblcolumns}\n                            data={data}\n                            editable={{\n                                onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowUpdate(newData, oldData, resolve);\n                                }),\n                            }}\n\n                            components={{\n                                Toolbar: props => (\n                                    <div>\n                                    <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}></h1>\n                                    </div>\n                                ),\n                                }}\n                            \n                            />\n                    </div>\n                :   <div>\n                        {!open && <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}> {firstname + \", Bio\"}</h1> }\n\n                        <MaterialTable\n                            options={{\n                                search: false,\n                                paging: false\n                            }}\n                            title=\"Profile\"\n                            icons={tableIcons}\n                            columns={tblcolumns}\n                            data={data}\n                            components={{\n                                Toolbar: props => (\n                                    <div>\n                                    <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}></h1>\n                                    </div>\n                                ),\n                                }}\n                            \n                            />\n\n                    </div>\n            }        \n        </div>\n    )\n}\nexport default Profile;","import React, { useContext, useEffect, useState } from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios'\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination} from '@material-ui/core';\nimport {Paper, Grid} from '@material-ui/core';\nimport Avatar from 'react-avatar';\nimport Box from '@material-ui/core/Box';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\n\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nfunction api_header(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const head_element = {\n            headers: {\n                Authorization: \"Bearer \" + storedUser.token\n            }\n        }\n        return head_element\n    }else{\n        return null;\n    }\n}\n\nconst columns = [\"Name\", \"Gender\", \"Email\", \"Phone\", \"City\", \"Country\"]\n  \n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5)\n    },\n    container: {\n        maxHeight: 440,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n        width: 200\n    },\n    iconButton: {\n        padding: 10,\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n  }));\n\nfunction Healthworkers(){\n\n    const classes = useStyles();\n    const history = useHistory();\n    const [healthworkers, setHealthworkers] = useState([])\n    const [workers, setWorkers] = useState([])\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n    const [id, setId] = useState('')\n\n    //backdrop\n    const [open, setOpen] = useState(false);\n    \n    useEffect(() => { \n        setOpen(true)\n        \n        api.get(\"/healthworkers\", api_header())\n            .then(res=>{\n                \n                setTimeout(() => {\n                    setHealthworkers(res.data.healthworkers)\n                    setWorkers(res.data.healthworkers)\n                    setOpen(false)\n                }, 500)\n            })\n            .catch(error=>{\n                \n                setTimeout(() => {\n                    setIserror(true)\n                    setErrorMessages(\"Cannot retrieve list of health officials. Try again later and contact admin if problem persist!\")\n                    setOpen(false)\n                }, 50)\n            })\n    }, [])\n\n    //table\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n    \n    const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n    };\n\n    \n    const filterHealthworkers = (e) => {\n          const query = e.target.value\n\n          if(query === \"\"){\n              setWorkers(healthworkers)\n          }else{\n            api.get(\"/healthworkers/filter/\"+query, api_header())\n            .then(res=>{\n                const returnedData = res.data.healthworkers\n                if(returnedData !== undefined){ // no entries found\n                    setWorkers(res.data.healthworkers)\n                }else{\n                    setWorkers([])\n                }\n                \n            })\n            .catch(error=>{\n                console.log(\"Cannot fetch data\")\n            })\n          }\n          \n    }\n\n    \n\n    //read only form for loggout users or login users who accesses another user's page\n    return (\n        <div className={classes.root}>\n            {!open &&\n                <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}>Health officials</h1>\n            }\n            <div>\n                {iserror && \n                    <Alert severity=\"error\">\n                        {errorMessages.map((msg, i) => {\n                            return <div key={i}>{msg}</div>\n                        })}\n                    </Alert>\n                }\n                    \n            </div>\n\n            <Backdrop className={classes.backdrop} open={open}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n                    <div component=\"form\" className={classes.searchDiv}>\n                        <IconButton className={classes.iconButton} aria-label=\"menu\">\n                            <MenuIcon />\n                        </IconButton>\n                        <InputBase\n                            className={classes.input}\n                            placeholder=\"Search Doctors\"\n                            inputProps={{ 'aria-label': 'search doctors' }}\n                            onChange={filterHealthworkers}\n                        />\n                        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                            <SearchIcon />\n                        </IconButton>\n                        <Divider className={classes.divider} orientation=\"vertical\" />\n                    </div>\n                </Grid>\n                \n                <Paper>\n                <TableContainer className={classes.container}>\n\n                    <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                        {columns.map((column, i) => (\n                            (i == 0\n                                ? <TableCell key={i} align=\"left\" style={{ minWidth: 200 }}><Box fontWeight=\"fontWeightBold\" m={1}>{column}</Box></TableCell>\n                                : <TableCell key={i} align=\"left\" style={{ minWidth: 170 }}><Box fontWeight=\"fontWeightBold\" m={1}>{column}</Box></TableCell>\n                                )\n                        ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {workers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((worker) => (\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={worker._id}>\n                                <TableCell style={{ minWidth: 200 }} align=\"left\"><Avatar maxInitials={1} size={40} round={true} name={worker.name.first_name} />{\"   \" + worker.name.first_name + \" \" + worker.name.last_name}</TableCell>\n                                <TableCell align=\"left\">{worker.gender}</TableCell>\n                                <TableCell align=\"left\">{worker.contact.email}</TableCell>\n                                <TableCell align=\"left\">{worker.contact.phone}</TableCell>\n                                <TableCell align=\"left\">{worker.contact.city}</TableCell>\n                                <TableCell align=\"left\">{worker.contact.country}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[2, 10, 20]}\n                    component=\"div\"\n                    count={workers.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n                </Paper>\n        </div>\n    )\n}\n \nexport default Healthworkers;\n","\nimport axios from 'axios'\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nexport const patientReducer = (state, action) => {\n    switch(action.type){\n        case 'GET_NUM_METRICS':\n            return {...state, num_metrics: action.count}\n            \n        case 'GET_NUM_SYMPTOMS':\n            return {...state, num_symptoms: action.count}\n            \n        case 'GET_NUM_DIAGNOSTICS':\n            return {...state, num_diagnostics: action.count}\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer} from 'react';\nimport { patientReducer } from '../reducers/patientReducer';\n\nexport const PatientContext = createContext();\n\nconst PatientContextProvider = (props) => {\n\n    const [patientData, dispatchPatient] = useReducer(patientReducer, {num_metrics: 0, num_symptoms: 0, num_diagnostics: 0});\n    return (\n        <PatientContext.Provider value={{patientData, dispatchPatient}}>\n            {props.children}\n        </PatientContext.Provider>\n    )\n}\n\nexport default PatientContextProvider;","import React, { useContext, useEffect, useState } from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Avatar from 'react-avatar';\n\nimport MaterialTable from \"material-table\";\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport Alert from '@material-ui/lab/Alert';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { pink } from '@material-ui/core/colors';\nimport { LoginContext } from '../../context/LoginContext';\nimport { PatientContext } from '../../context/PatientContext'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\nconst h1color = pink[\"500\"]\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nfunction api_header(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const head_element = {\n            headers: {\n                Authorization: \"Bearer \" + storedUser.token\n            }\n        }\n        return head_element\n    }else{\n        return null;\n    }\n}\n\nfunction getFirstname(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const first_name = storedUser.fname\n        return first_name\n    }else{\n        return null;\n    }\n}\n\nfunction getLastname(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const last_name = storedUser.lname\n        return last_name\n    }else{\n        return null;\n    }\n}\n\nfunction validateEmail(email){\n    const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n\nfunction get_id(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const id = storedUser.id\n        return id\n    }else{\n        return null;\n    }\n}\n\n \nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5)\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n  }));\n\nfunction Patients(){\n\n    const classes = useStyles();\n    const history = useHistory();\n    const { dispatchPatient } = useContext(PatientContext)\n    const [patients, setPatients] = useState([])\n    const [filteredPatients, setFilteredPatients] = useState([])\n    const [fullname, setFullname] = useState('')\n    const [id, setId] = useState('')\n\n    const [city, setCity] = useState('')\n    const [country, setCountry] = useState('')\n    const [cities, setCities] = useState([])\n    const [countries, setCountries] = useState([])\n    const [data, setData] = useState([]);\n    const [dob, setDob] = useState(new Date('1987-08-18T21:11:54'));\n    const {healthworker } = useContext(LoginContext); \n\n    \n    var tblcolumns = [\n        {title: \"\", render: rowData => <Avatar maxInitials={1} size={40} round={true} name={rowData == undefined ? \" \" : rowData.fname} />  },\n        {title: \"id\", field: \"id\", hidden: true},\n        {title: \"First name\", field: \"fname\"},\n        {title: \"Last name\", field: \"lname\"},\n        {title: \"Gender\", field: \"gender\", lookup: {\"male\": \"male\", \"female\": \"female\", \"other\": \"other\"}},\n        {title: \"Date-of-birth\", field: \"dob\", editComponent: () => {\n            return (\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        disableFuture=\"true\"\n                        format=\"dd/MM/yyyy\"\n                        value={dob}\n                        onChange={handleDateChange}\n                        variant=\"inline\"\n                    />\n                </MuiPickersUtilsProvider>\n            )\n        }},\n        {title: \"Email\", field: \"email\"},\n        {title: \"Phone\", field: \"phone\", type: 'numeric'},\n        {title: \"Country\", field: \"country\", editComponent: () => {\n            return (\n                <Select value={country} onChange={(e) =>  setCountry(e.target.value)}>\n                    {countries.map((item)=> {\n                        return <MenuItem key={item._id} value={item.name}>{item.name}</MenuItem>\n                    })}\n                </Select>\n            )\n          }\n        },\n        /*{title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Select value={city} onChange={(e) => setCity(e.target.value)}>\n                    {cities.map((item, i)=> {\n                        return <MenuItem key={i} value={item}>{item}</MenuItem>\n                    })}\n                </Select>\n            )\n        }}*/\n        {title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Autocomplete\n                    value={city}\n                    onChange={(e, newValue) => setCity(newValue)}\n                    id=\"combo-box-demo\"\n                    options={cities}\n                    style={{ width: 200 }}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => <TextField {...params}  />}\n                />\n            )\n        }}\n    ]\n\n    //error\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    //backdrop\n    const [open, setOpen] = useState(false);\n\n    //date picker\n    const handleDateChange = (date) => {\n        setDob(date);\n    };\n\n    useEffect(() => {\n        \n        api.get(\"/countries\", api_header())\n            .then(res => {                  \n                setCountries(res.data)\n                setIserror(false)\n                setErrorMessages([])\n             })\n             .catch(error=>{\n                setIserror(true)\n                setErrorMessages([\"Could not load countries. Try again later and contact admin if problem persist\"])\n             })\n    }, [])\n\n    useEffect(() => { \n        setOpen(true)\n        if(country){\n            api.get(\"/countries/\"+country)\n            .then(res => {\n                setCities(res.data.cities.sort())\n                //change city value if the city is not in the selected country\n                if(! res.data.cities.includes(city)){\n                    setCity(res.data.cities[0])\n                }\n                setIserror(false)\n                setErrorMessages([])\n\n                setTimeout(() => {\n                    setOpen(false)\n                }, 100);\n\n                \n            })\n            .catch(error=>{\n                setIserror(true)\n                setErrorMessages([\"Could not load cities. Try again later and contact admin if problem persist\"])\n                setOpen(false)\n\n            })\n        }\n    }, [country])\n\n    useEffect(() => { \n        setOpen(true)\n        api.get(\"/patients\", api_header())\n            .then(res=>{\n                setPatients(res.data.patients)\n                setFilteredPatients(res.data.patients)\n                setFullname(getFirstname() + \" \" + getLastname())\n                setId(get_id())\n\n                //for material-table\n                var tableData = [];\n                const returnedData = res.data.patients\n                    returnedData.forEach((patient)=> {\n                        tableData.push({\n                            id: patient._id,\n                            fname: patient.name.first_name,\n                            lname: patient.name.last_name,\n                            gender: patient.gender,\n                            dob: patient.DOB,\n                            email: patient.contact.email,\n                            phone: patient.contact.phone,\n                            city: patient.contact.city,\n                            country: patient.contact.country\n                        })\n                    });\n                    \n                    setTimeout(() => {\n                        setData(tableData)\n                        setIserror(false)\n                        setErrorMessages([])\n                        setOpen(false)\n                        \n                    }, 500);\n\n                    \n            })\n            .catch(error=>{\n                setTimeout(() => {\n                    setIserror(true)\n                    setErrorMessages([\"Could not load patients. Try again later and contact admin if problem persist\"])\n                    setOpen(false)\n\n                }, 50);\n                \n            })\n    }, [])\n\n    const filterPatients = (e) => {\n        const query = e.target.value\n\n        if(query === \"\"){\n            setFilteredPatients(patients)\n        }else{\n          api.get(\"/patients/filter/\"+query, api_header())\n          .then(res=>{\n              const returnedData = res.data.patients\n              if(returnedData !== undefined){ // no entries found\n                  setFilteredPatients(res.data.patients)\n              }else{\n                  setFilteredPatients([])\n              }\n              \n          })\n          .catch(error=>{\n              console.log(\"Cannot fetch data\")\n          })\n        }        \n    }\n\n    const handleRowAdd = (newRow, resolve, reject) => {\n        let errMsg = []\n        if(newRow.fname == undefined){\n            errMsg.push(\"Please enter first name\")\n        }\n        if(newRow.lname == undefined){\n            errMsg.push(\"Please enter last name\")\n        }\n        if(country == \"\"){\n            errMsg.push(\"Please select country\")\n        }\n        if(city == \"\"){\n            errMsg.push(\"Please select city\")\n        }\n        if(newRow.gender == undefined){\n            errMsg.push(\"Please select gender\")\n        }\n        if(newRow.email != \"\" && validateEmail(newRow.email) == false){\n            errMsg.push(\"Please enter a valid email\")\n        }\n\n        if(errMsg.length < 1){\n            const dataToAdd = {\n                name : {\n                    first_name : newRow.fname,\n                    last_name : newRow.lname\n                },\n                DOB : dob,\n                gender : newRow.gender,\n                contact : {\n                    email : newRow.email,\n                    phone : newRow.phone,\n                    city : city,\n                    country : country\n                },\n                created_by: healthworker.id,\n                created_at: new Date(),\n                updated_by: healthworker.id,\n                updated_at: new Date()\n            };\n            \n            api.post(\"/patients\", dataToAdd, api_header())\n                .then(res => {\n                    let addedPatient = res.data.createdPatient\n\n                    let rowToAdd = {\n                        id: addedPatient._id,\n                        fname: addedPatient.name.first_name,\n                        lname: addedPatient.name.last_name,\n                        gender: addedPatient.gender,\n                        dob: addedPatient.DOB,\n                        email: addedPatient.contact.email,\n                        phone: addedPatient.contact.phone,\n                        city: addedPatient.contact.city,\n                        country: addedPatient.contact.country\n                    }\n                    const newTableData = [...data];\n                    newTableData.push(rowToAdd)\n                    setData(newTableData)\n                    setErrorMessages([])\n                    setIserror(false)\n                    \n                    setTimeout(() => {\n                        resolve()\n                    }, 500);\n\n                })\n                .catch(error=> {\n                    if(error.response){\n                        if(error.response.data.message === \"Email exists\"){\n                            setErrorMessages([\"Email already exist. Please choose another valid email address!\"])\n                        }else{\n                            setErrorMessages([\"Error adding patient! Please try again later. If problem persist, contact admin\"])\n                        }\n                    }else{\n                        setErrorMessages([\"Error adding patient! Please try again later. If problem persist, contact admin\"])\n                    }\n                    setIserror(true)\n                    reject()\n                })\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            reject()\n        }\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve, reject) => {\n        let errMsg = []\n        if(newData.fname == \"\"){\n            errMsg.push(\"Please enter first name\")\n        }\n        if(newData.lname == \"\"){\n            errMsg.push(\"Please enter last name\")\n        }\n        if(newData.email != \"\" && validateEmail(newData.email) == false){\n            errMsg.push(\"Please enter a valid email\")\n        }\n        \n        if(errMsg.length < 1){\n            const data_updated = [\n                {\"propName\": \"name.first_name\", \"value\": newData.fname},\n                {\"propName\": \"name.last_name\", \"value\": newData.lname},\n                {\"propName\": \"gender\", \"value\": newData.gender},\n                {\"propName\": \"DOB\", \"value\": dob},\n                {\"propName\": \"contact.email\", \"value\": newData.email},\n                {\"propName\": \"contact.city\", \"value\": city || oldData.city},\n                {\"propName\": \"contact.country\", \"value\": country || oldData.country},\n                {\"propName\": \"contact.phone\", \"value\": newData.phone},\n                {\"propName\": \"updated_at\", \"value\": new Date()},\n                {\"propName\": \"updated_by\", \"value\": healthworker.id},\n            ]\n    \n            const patient_id = newData.id\n            api.patch(\"/patients/\"+patient_id, data_updated, api_header())\n                .then(res => {\n                    const updatedPatient = res.data.updatedPatient;\n                    let updatedRowData = {\n                        id: updatedPatient._id,\n                        fname: updatedPatient.name.first_name,\n                        lname: updatedPatient.name.last_name,\n                        gender: updatedPatient.gender,\n                        dob: updatedPatient.DOB,\n                        email: updatedPatient.contact.email,\n                        phone: updatedPatient.contact.phone,\n                        city: updatedPatient.contact.city,\n                        country: updatedPatient.contact.country\n                    }\n                    //update table\n                    const newTableData = [...data];\n                    newTableData[data.indexOf(oldData)] = updatedRowData\n                    \n                    setData(newTableData)\n                    setErrorMessages([])\n                    setIserror(false)\n\n                    setTimeout(() => {\n                        resolve()\n                    }, 500);\n                 })\n                 .catch(error => {\n                    setIserror(true)\n                    setErrorMessages([\"Update failed. Please try again later. If problem persist contact admin\"])\n                    reject()\n                 })\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            reject()\n        }\n    }\n\n    const handleRedirect = (id) => {\n        api.get(\"/metrics/number/\"+id)\n            .then(res => {   \n                const count = res.data.count\n                dispatchPatient({type: 'GET_NUM_METRICS', count});\n            })\n            .catch(error=> {\n                const count = 0\n                dispatchPatient({type: 'GET_NUM_METRICS', count});\n            })\n\n\n        api.get(\"/patient_symptoms/number/\"+id)\n            .then(res => {\n                const count = res.data.count\n                dispatchPatient({type: 'GET_NUM_SYMPTOMS', count})\n            })\n            .catch(error=> {\n                const count = 0\n                dispatchPatient({type: 'GET_NUM_SYMPTOMS', count})\n            })\n\n        api.get(\"/patient_diagnostics/number/\"+id)\n            .then(res => {\n                const count = res.data.count\n                dispatchPatient({type: 'GET_NUM_DIAGNOSTICS', count})\n            })\n            .catch(error=> {\n                const count = 0\n                dispatchPatient({type: 'GET_NUM_DIAGNOSTICS', count})\n            })\n\n        history.push(\"/patients/biodata/\" + id)\n    }\n    //read only form for loggout users or login users who accesses another user's page\n    return (\n        <div className={classes.root}>\n            {!open &&\n                <h1 style={{color: h1color}}>Patients</h1>\n            }\n            \n            <Backdrop className={classes.backdrop} open={open}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n\n            \n            <div>\n                {iserror && \n                    <Alert severity=\"error\">\n                        {errorMessages.map((msg, i) => {\n                            return <div key={i}>{msg}</div>\n                        })}\n                    </Alert>\n                }\n                \n            </div>\n\n            <div>\n                <MaterialTable\n                    actions={[\n                        {\n                            icon: () => <VisibilityIcon className={classes.icon_color} />,\n                            tooltip: 'Click to view/add more details',\n                            onClick: (event, rowData) => {handleRedirect(rowData.id)}\n                            //onClick: (event, rowData) => history.push(\"/patients/biodata/\" + rowData.id)\n                        }\n                        ]}\n                        title=\"\"\n                        icons={tableIcons}\n                        columns={tblcolumns}\n                        data={data}\n                        editable={{\n                            onRowAdd: (newData) =>\n                            new Promise((resolve, reject) => {\n                                handleRowAdd(newData, resolve, reject);\n                            }),\n                            onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve, reject) => {\n                                handleRowUpdate(newData, oldData, resolve, reject);\n                            }),\n                        }}\n                />\n            </div>\n        </div>\n    )\n}\n \nexport default Patients;","import React, { useContext, useEffect, useState } from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport axios from 'axios'\nimport MaterialTable from \"material-table\";\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport { set } from 'date-fns';\nimport Alert from '@material-ui/lab/Alert';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { LoginContext } from '../../context/LoginContext';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nfunction api_header(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const head_element = {\n            headers: {\n                Authorization: \"Bearer \" + storedUser.token\n            }\n        }\n        return head_element\n    }else{\n        return null;\n    }\n}\n\nfunction validateEmail(email){\n    const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n \nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5)\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n\n  }));\n\nfunction Bio({match}){\n\n    const classes = useStyles();\n    const history = useHistory();\n    const {healthworker } = useContext(LoginContext); \n    const [city, setCity] = useState('')\n    const [country, setCountry] = useState('')\n    const [cities, setCities] = useState([])\n    const [countries, setCountries] = useState([])\n    const [data, setData] = useState([]);\n    const [dob, setDob] = useState(new Date('1987-08-18T21:11:54'));\n    const location = useLocation(); //contains patient details from the patient list\n    const [name, setName] = useState({})\n    \n\n\n    var tblcolumns = [\n        {title: \"id\", field: \"id\", hidden: true},\n        {title: \"First name\", field: \"fname\"},\n        {title: \"Last name\", field: \"lname\"},\n        {title: \"Gender\", field: \"gender\", lookup: {\"male\": \"male\", \"female\": \"female\", \"other\": \"other\"}},\n        {title: \"Date-of-birth\", field: \"dob\", editComponent: () => {\n            return (\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        disableFuture=\"true\"\n                        format=\"dd/MM/yyyy\"\n                        value={dob}\n                        onChange={handleDateChange}\n                        variant=\"inline\"\n                    />\n                </MuiPickersUtilsProvider>\n            )\n        }},\n        {title: \"Email\", field: \"email\"},\n        {title: \"Phone\", field: \"phone\", type: 'numeric' },\n        {title: \"Country\", field: \"country\", editComponent: () => {\n            return (\n                <Select value={country} onChange={(e) => setCountry(e.target.value)}>\n                    {countries.map((item)=> {\n                        return <MenuItem key={item._id} value={item.name}>{item.name}</MenuItem>\n                    })}\n                </Select>\n            )\n          }\n        },\n        /*{title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Select value={city} onChange={(e) => setCity(e.target.value)}>\n                    {cities.map((item, i)=> {\n                        return <MenuItem key={i} value={item}>{item}</MenuItem>\n                    })}\n                </Select>\n            )\n        }}*/\n        {title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Autocomplete\n                    value={city}\n                    onChange={(e, newValue) => setCity(newValue)}\n                    id=\"combo-box-demo\"\n                    options={cities}\n                    style={{ width: 200 }}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => <TextField {...params}  />}\n                />\n            )\n        }}\n    ]\n\n    //error\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n    //backdrop\n    const [open, setOpen] = useState(false);\n\n    //date picker\n    const handleDateChange = (date) => {\n        setDob(date);\n    };\n\n\n    useEffect(() => {\n        api.get(\"/countries\", api_header())\n            .then(res => {                  \n                setCountries(res.data)\n                setIserror(false)\n                setErrorMessages([])\n             })\n             .catch(error=>{\n                 setIserror(true)\n                 setErrorMessages([\"Could not load countries. Try again later and contact admin if problem persist\"])\n             })\n    }, [])\n\n    useEffect(() => { \n        setOpen(true)\n        if(country){\n            api.get(\"/countries/\"+country)\n            .then(res => {\n                setCities(res.data.cities.sort())\n                //change city value if the city is not in the selected country\n                if(! res.data.cities.includes(city)){\n                    setCity(res.data.cities[0])\n                }\n                setIserror(false)\n                setErrorMessages([])\n\n                setTimeout(() => {\n                    setOpen(false)\n                }, 100);\n            })\n            .catch(error=>{\n\n                setIserror(true)\n                setErrorMessages([\"Could not load cities. Try again later and contact admin if problem persist\"])\n                setOpen(false)\n\n            })\n        }\n    }, [country])\n\n    useEffect(() => {\n        setOpen(true)\n        api.get(\"/patients/\"+match.params.id, api_header())\n            .then(res => {\n                const patient = res.data.patient\n                setName(patient.name)\n                //for material-table\n                var tableData = [];\n                tableData.push({\n                    id: patient._id,\n                    fname: patient.name.first_name,\n                    lname: patient.name.last_name,\n                    gender: patient.gender,\n                    dob: patient.DOB,\n                    email: patient.contact.email,\n                    phone: patient.contact.phone,\n                    city: patient.contact.city,\n                    country: patient.contact.country\n                })\n                setTimeout(() => {\n                    setData(tableData)\n                    setIserror(false)\n                    setErrorMessages([])\n                    setOpen(false)\n                    \n                }, 500);\n\n             })\n             .catch(error => {\n\n                setIserror(true)\n                setErrorMessages([\"Could not load patients. Try again later and contact admin if problem persist\"])\n                setOpen(false)\n                \n             })\n    }, [])\n\n\n    const handleRowUpdate = (newData, oldData, resolve, reject) => {\n        let errMsg = []\n        if(newData.fname == \"\"){\n            errMsg.push(\"Please enter first name\")\n        }\n        if(newData.lname == \"\"){\n            errMsg.push(\"Please enter last name\")\n        }\n        if(newData.email != \"\" && validateEmail(newData.email) == false){\n            errMsg.push(\"Please enter a valid email\")\n        }\n\n        let tempCountry = \"\"\n        let tempCity = \"\"\n\n        if(country == \"\"){\n            setCountry(oldData.country)\n            tempCountry = oldData.country\n        }else{\n            tempCountry = country\n        }\n        if(city == \"\"){\n            setCity(oldData.city)\n            tempCity = oldData.city\n        }else{\n            tempCity = city\n        }\n\n        if(errMsg.length < 1){\n            const data_updated = [\n                {\"propName\": \"name.first_name\", \"value\": newData.fname},\n                {\"propName\": \"name.last_name\", \"value\": newData.lname},\n                {\"propName\": \"gender\", \"value\": newData.gender},\n                {\"propName\": \"DOB\", \"value\": dob},\n                {\"propName\": \"contact.email\", \"value\": newData.email},\n                {\"propName\": \"contact.city\", \"value\": tempCity},\n                {\"propName\": \"contact.country\", \"value\": tempCountry},\n                {\"propName\": \"contact.phone\", \"value\": newData.phone},\n                {\"propName\": \"updated_at\", \"value\": new Date()},\n                {\"propName\": \"updated_by\", \"value\": healthworker.id},\n            ]\n\n            const patient_id = newData.id\n            api.patch(\"/patients/\"+patient_id, data_updated, api_header())\n                .then(res => {\n                    setName(res.data.updatedPatient.name)\n                    const updatedPatient = res.data.updatedPatient;\n                    let updatedRowData = {\n                        id: updatedPatient._id,\n                        fname: updatedPatient.name.first_name,\n                        lname: updatedPatient.name.last_name,\n                        gender: updatedPatient.gender,\n                        dob: updatedPatient.DOB,\n                        email: updatedPatient.contact.email,\n                        phone: updatedPatient.contact.phone,\n                        city: updatedPatient.contact.city,\n                        country: updatedPatient.contact.country\n                    }\n                    //update table\n                    const newTableData = [...data];\n                    newTableData[data.indexOf(oldData)] = updatedRowData\n                    \n                    setData(newTableData)\n                    setErrorMessages([])\n                    setIserror(false)\n\n                    setTimeout(() => {\n                        resolve()\n                    }, 500);\n\n                    \n                })\n                .catch(error => {\n                    setIserror(true)\n                    setErrorMessages([\"Update failed. Please try again later. If problem persist contact admin\"])\n                    reject()\n                })\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            reject()\n        }\n    }\n\n    //read only form for loggout users or login users who accesses another user's page\n    return (\n        <div className={classes.root}>\n            <Backdrop className={classes.backdrop} open={open}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            {!open &&\n                <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}>{name.first_name+\"'s\" + \" Biodata\"}</h1>\n            }\n            \n            <div>\n                {iserror && \n                    <Alert severity=\"error\">\n                        {errorMessages.map((msg, i) => {\n                            return <div key={i}>{msg}</div>\n                        })}\n                    </Alert>\n                }\n                \n            </div>\n            \n            <div>\n                <MaterialTable\n                    options={{\n                        search: false,\n                        paging: false\n                    }}\n                    title=\"\"\n                    icons={tableIcons}\n                    columns={tblcolumns}\n                    data={data}\n                    editable={{\n                        onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            handleRowUpdate(newData, oldData, resolve, reject)\n                        })\n                    }}\n                    \n                />\n            </div>\n\n        </div>\n    )\n}\n \nexport default Bio;","import React, { useEffect, useState, useContext } from 'react'\nimport axios from 'axios'\nimport ReactDOM from \"react-dom\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {Grid} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Link from '@material-ui/core/Link';\nimport { isThisQuarter } from 'date-fns';\nimport { LoginContext } from '../../context/LoginContext';\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nfunction api_header(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const head_element = {\n            headers: {\n                Authorization: \"Bearer \" + storedUser.token\n            }\n        }\n        return head_element\n    }else{\n        return null;\n    }\n}\n\nconst convertTo2dp = (num) => {\n    let result = (Math.round(num * 100) / 100).toFixed(2);\n    return result\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5)\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n  }));\n\nfunction Metrics({match}){\n    const classes = useStyles();\n    const history = useHistory();\n    const {healthworker } = useContext(LoginContext); \n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n      };\n\n    const columns = [\n        {title: \"id\", field: \"id\", hidden: true},\n        {title: \"Height (cm)\", field: \"height\", type: 'numeric' },\n        {title: \"Weight (kg)\", field: \"weight\", type: 'numeric' },\n        {title: \"BMI\", field: \"bmi\", editable: 'never'},\n        {title: \"Weight status\", field: \"weight_status\", editable: 'never'},\n        {title: \"Prenant\", field: \"pregnant\", lookup: {\"yes\": \"yes\", \"no\": \"no\", \"N/A\": \"N/A\"}},\n        {title: \"Blood group\", field: \"blood_group\", lookup: {\"A+\": \"A+\", \"A-\": \"A-\", \"B+\": \"B+\", \"B-\": \"B-\", \"AB+\": \"AB+\", \"AB-\": \"AB-\", \"O+\": \"O+\", \"O-\": \"O-\"}},\n        {title: \"Smoking\", field: \"smoking\", lookup: {\"yes\": \"yes\", \"no\": \"no\"}},\n        {title: \"Drinking alcohol\", field: \"drinking_alcohol\", lookup: {\"yes\": \"yes\", \"no\": \"no\"}},\n        {title: \"Comorbidity\", field: \"comorbidity\", lookup: {\"yes\": \"yes\", \"no\": \"no\"}},\n        {title: \"Comorbidity details\", field: \"cormorbidity_details\"},\n        {title: \"Testing indication\", field: \"testing_indication\", lookup: {\"yes\": \"yes\", \"no\": \"no\"}},\n        {title: \"Created by\", field: \"created_by\", hidden: true},\n        {title: \"Updated by\", field: \"updated_by\", hidden: true},\n        {title: \"Created at\", field: \"created_at\", editable: 'never', render: rowData => <Link \n            component=\"button\" variant=\"body2\" onClick={() => history.push(\"/profile/\"+rowData.created_by)}>{rowData == undefined ? \" \" : rowData.created_at}\n        </Link>},\n        {title: \"Updated at\", field: \"updated_at\", editable: 'never', render: rowData => <Link \n            component=\"button\" variant=\"body2\" onClick={() => history.push(\"/profile/\"+rowData.updated_by)} href=\"#\">{rowData == undefined ? \" \" : rowData.updated_at}\n        </Link>}\n    ]\n\n\n    const [data, setData] = useState([])\n    const [patient, setPatient] = useState({})\n    \n    //error\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    //backdrop\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => { \n        api.get(\"/patients/\"+match.params.id, api_header())\n        .then(res => {\n            let fname = res.data.patient.name.first_name\n            let lname = res.data.patient.name.last_name\n            setPatient({id: match.params.id, firstname: fname, lastname: lname})\n        })\n        .catch(error=>{\n            setIserror(true)\n            setErrorMessages([\"Cannot get patient details. Please try again later. Contact admin if problem persist!\"])\n            \n        })\n        \n    }, [])\n\n\n    useEffect(() => { \n        setOpen(true)\n        api.get(\"/metrics/patients/\"+match.params.id, api_header())\n            .then(res=>{\n                var tableData = [];\n                if(res.data.metrics.length > 0){\n                    const returnedData = res.data.metrics\n                    returnedData.forEach((metric)=> {\n                        tableData.push({\n                            id: metric._id,\n                            height: metric.height,\n                            weight: metric.weight,\n                            bmi: convertTo2dp(metric.BMI),\n                            weight_status: metric.weight_status,\n                            pregnant: metric.pregnancy_status,\n                            blood_group: metric.blood_group,\n                            smoking: metric.smoking_status,\n                            drinking_alcohol: metric.current_alcohol_drinking,\n                            comorbidity: metric.comorbidity.answer,\n                            cormorbidity_details: metric.comorbidity.details,\n                            testing_indication: metric.indication_for_testing,\n                            created_by: metric.created_by,\n                            created_at: metric.created_at,\n                            updated_by: metric.updated_by,\n                            updated_at: metric.updated_at\n                        })\n                    });\n                    \n                    setTimeout(() => {\n                        setData(tableData)\n                        setOpen(false)\n                        setIserror(false)\n                        setErrorMessages([])\n                    }, 500)\n                    \n                }else{\n                    setOpen(false)\n                    setIserror(false)\n                    setErrorMessages([])\n                }\n            })\n            .catch(error=>{\n                setOpen(false)\n                setIserror(true)\n                setErrorMessages([\"Error fetching patient's anthropometric data. Try again later and contact admin if problem persist\"])\n\n            })\n    }, [])\n\n\n    const handleRowAdd = (newRow, resolve, reject) => {\n\n        let w = 0\n        let h = 0\n        let BMI = 0\n        let weight_status = \"N/A\";\n        if(newRow.weight === undefined || newRow.height === undefined){\n            w = 0\n            h = 0\n            BMI = 0.0\n        }else{\n            w = newRow.weight\n            h = (newRow.height)/100\n            let bmi_temp = w/(h*h);\n            BMI = convertTo2dp(bmi_temp)\n\n            if(BMI < 18.5){\n                weight_status = \"underweight\"\n            }else if (BMI >= 18.5 && BMI <= 24.9){\n                weight_status = \"normal weight\"\n            }else if(BMI >= 25 && BMI <= 29.9){\n                weight_status = \"overweight\"\n            }else if(BMI >= 30){\n                weight_status = \"obesity\"\n            }else{\n                weight_status = \"unknown\"\n            }\n        }\n\n        let errMsg = []\n        if(newRow.height === undefined){\n           errMsg.push(\"Please enter height\")\n        }\n        if(newRow.weight === undefined){\n            errMsg.push(\"Please enter weight\")\n        }\n        if(newRow.pregnant === undefined){\n            errMsg.push(\"Please select pregnancy status\")\n        }\n        if(newRow.blood_group === undefined){\n            errMsg.push(\"Please select blood group\")\n        }\n        if(newRow.smoking === undefined){\n            errMsg.push(\"Please select smoking status\")\n        }\n        if(newRow.drinking_alcohol === undefined){\n            errMsg.push(\"Please select alcohol drinking status\")\n        }\n        if(newRow.comorbidity === undefined){\n            errMsg.push(\"Please select comorbidity\")\n        }\n        if(newRow.testing_indication === undefined){\n            errMsg.push(\"Please select if you want to be tested\")\n        }\n\n        if(errMsg.length < 1){ //no error\n            const dataToAdd = {\n                patient: {\n                    _id: patient.id,\n                    name: {first_name: patient.firstname, last_name: patient.lastname}\n                },\n                height: newRow.height,\n                weight: newRow.weight,\n                BMI: BMI,\n                weight_status: weight_status,\n                pregnancy_status: newRow.pregnant,\n                blood_group: newRow.blood_group,\n                smoking_status: newRow.smoking,\n                current_alcohol_drinking: newRow.drinking_alcohol,\n                comorbidity: {answer: newRow.comorbidity, details: newRow.cormorbidity_details},\n                indication_for_testing: newRow.testing_indication,\n                created_by: healthworker.id,\n                created_at: new Date(),\n                updated_by: healthworker.id,\n                updated_at: new Date()\n            };\n\n            \n            api.post(\"/metrics\", dataToAdd, api_header())\n                .then(res => {\n\n                    const metric = res.data.createdAnthropometric\n                    const rowToAdd = {\n                        id: metric._id,\n                        height: metric.height,\n                        weight: metric.weight,\n                        bmi: metric.BMI,\n                        weight_status: metric.weight_status,\n                        pregnant: metric.pregnancy_status,\n                        blood_group: metric.blood_group,\n                        smoking: metric.smoking_status,\n                        drinking_alcohol: metric.current_alcohol_drinking,\n                        comorbidity: metric.comorbidity.answer,\n                        cormorbidity_details: metric.comorbidity.details,\n                        testing_indication: metric.indication_for_testing,\n                        created_by: metric.created_by,\n                        created_at: metric.created_at,\n                        updated_by: metric.updated_by,\n                        updated_at: metric.updated_at\n                    }\n\n                    const newTableData = [...data];\n                        newTableData.push(rowToAdd)\n                        setData(newTableData)\n                        setErrorMessages([])\n                        setIserror(false)\n                    \n                        setTimeout(() => {\n                            resolve()\n                        }, 500);\n                })\n                .catch(error=> {\n                    setIserror(true)\n                    setErrorMessages([\"Error adding patient anthropometrics Please try again later. If problem persist, contact admin\"])\n                    reject()\n                })\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            reject()\n        }\n    } \n\n    const handleRowUpdate = (newData, oldData, resolve, reject) => {\n\n        let w = 0\n        let h = 0\n        let BMI = 0\n        let weight_status = \"N/A\";\n        if(newData.weight === undefined || newData.height === undefined){\n            w = 0\n            h = 0\n            BMI = 0.0\n        }else{\n            w = newData.weight\n            h = (newData.height)/100\n            BMI = w/(h*h);\n\n            if(BMI < 18.5){\n                weight_status = \"underweight\"\n            }else if (BMI >= 18.5 && BMI <= 24.9){\n                weight_status = \"normal weight\"\n            }else if(BMI >= 25 && BMI <= 29.9){\n                weight_status = \"overweight\"\n            }else if(BMI >= 30){\n                weight_status = \"obesity\"\n            }else{\n                weight_status = \"unknown\"\n            }\n        }\n\n        const metric_id = newData.id \n\n        let errMsg = []\n        if(newData.height === \"\"){\n           errMsg.push(\"Please enter height\")\n        }\n        if(newData.weight === \"\"){\n            errMsg.push(\"Please enter weight\")\n        }\n        if(newData.pregnant === \"\"){\n            errMsg.push(\"Please select pregnancy status\")\n        }\n        if(newData.blood_group === \"\"){\n            errMsg.push(\"Please select blood group\")\n        }\n        if(newData.smoking === \"\"){\n            errMsg.push(\"Please select smoking status\")\n        }\n        if(newData.drinking_alcohol === \"\"){\n            errMsg.push(\"Please select alcohol drinking status\")\n        }\n        if(newData.comorbidity === \"\"){\n            errMsg.push(\"Please select comorbidity\")\n        }\n        if(newData.testing_indication === \"\"){\n            errMsg.push(\"Please select if you want to be tested\")\n        }\n\n        if(errMsg.length < 1){ //no error\n\n            const data_updated = [\n                {\"propName\": \"height\", \"value\": newData.height},\n                {\"propName\": \"weight\", \"value\": newData.weight},\n                {\"propName\": \"BMI\", \"value\": BMI},\n                {\"propName\": \"weight_status\", \"value\": weight_status},\n                {\"propName\": \"pregnancy_status\", \"value\": newData.pregnant},\n                {\"propName\": \"blood_group\", \"value\": newData.blood_group},\n                {\"propName\": \"smoking_status\", \"value\": newData.smoking},\n                {\"propName\": \"current_alcohol_drinking\", \"value\": newData.drinking_alcohol},\n                {\"propName\": \"comorbidity.answer\", \"value\": newData.comorbidity},\n                {\"propName\": \"comorbidity.details\", \"value\": newData.cormorbidity_details},\n                {\"propName\": \"indication_for_testing\", \"value\": newData.testing_indication},\n                {\"propName\": \"updated_by\", \"value\": healthworker.id},\n                {\"propName\": \"updated_at\", \"value\": new Date()},\n            ]\n            \n            api.patch(\"/metrics/\"+metric_id, data_updated, api_header())\n                .then(res => {\n                    const metric = res.data.updatedMetric\n                    const updatedRowData = {\n                        id: metric._id,\n                        height: metric.height,\n                        weight: metric.weight,\n                        bmi: convertTo2dp(metric.BMI),\n                        weight_status: metric.weight_status,\n                        pregnant: metric.pregnancy_status,\n                        blood_group: metric.blood_group,\n                        smoking: metric.smoking_status,\n                        drinking_alcohol: metric.current_alcohol_drinking,\n                        comorbidity: metric.comorbidity.answer,\n                        cormorbidity_details: metric.comorbidity.details,\n                        testing_indication: metric.indication_for_testing,\n                        created_by: metric.created_by,\n                        created_at: metric.created_at,\n                        updated_by: metric.updated_by,\n                        updated_at: metric.updated_at\n                    }\n\n                    //update table\n                    const newTableData = [...data];\n                    newTableData[data.indexOf(oldData)] = updatedRowData\n                    \n                    setData(newTableData)\n                    setErrorMessages([])\n                    setIserror(false)\n\n                    setTimeout(() => {\n                        resolve()\n                    }, 500);\n                })\n                .catch(error=> {\n                    setIserror(true)\n                    setErrorMessages([\"Error updating patient anthropometrics Please try again later. If problem persist, contact admin\"])\n                    reject()\n                })\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            reject()\n        }\n    }\n    return (\n        <div className={classes.root}>\n            <Backdrop className={classes.backdrop} open={open}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            \n            {!open && <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}>{null || patient.firstname}, Anthropometric</h1>}\n            <div>\n                {iserror && \n                    <Alert severity=\"error\">\n                        {errorMessages.map((msg, i) => {\n                            return <div key={i}>{msg}</div>\n                        })}\n                    </Alert>\n                }\n                    \n            </div>\n\n            <div style={{ maxWidth: \"100%\" }}>\n                <MaterialTable\n                    \n                    title=\"\"\n                    icons={tableIcons}\n                    columns={columns}\n                    data={data}\n                    editable={{\n                        onRowAdd: (newData) =>\n                        new Promise((resolve, reject) => {\n                            handleRowAdd(newData, resolve, reject);\n                        }),\n                        onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            handleRowUpdate(newData, oldData, resolve, reject);\n                        }),\n                        onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                            setTimeout(() => {\n                            resolve();\n                            \n                            }, 600);\n                        }),\n                    }}\n\n                />\n            </div>                    \n        </div>\n    );\n}\n\nexport default Metrics;","import React, { useEffect, useState, useContext } from 'react'\nimport axios from 'axios'\nimport ReactDOM from \"react-dom\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {Grid} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport { useHistory } from 'react-router-dom';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Link from '@material-ui/core/Link';\nimport { LoginContext } from '../../context/LoginContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nfunction api_header(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const head_element = {\n            headers: {\n                Authorization: \"Bearer \" + storedUser.token\n            }\n        }\n        return head_element\n    }else{\n        return null;\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5)\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n  }));\n\nfunction Symptoms({match}){\n    const classes = useStyles();\n    const history = useHistory();\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const columns = [\n        {title: \"id\", field: \"id\", hidden: true},\n        /*{title: \"Symptoms\", field: \"symptom\", editComponent: () => {\n            return (\n                <Select value={symptom} onChange={(e) => setSymptom(e.target.value)}>\n                    {symptoms.map((item, i)=> {\n                        return <MenuItem key={i} value={item}>{item}</MenuItem>\n                    })}\n                </Select>\n            )\n          }\n        },*/\n        {title: \"Symptoms\", field: \"symptom\", editComponent: () => {\n            return (\n                <Autocomplete\n                    value={symptom}\n                    onChange={(e, newValue) => setSymptom(newValue)}\n                    id=\"combo-box-symptoms\"\n                    options={symptoms}\n                    style={{ width: 200 }}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => <TextField {...params}  />}\n                />\n            )\n        }},\n        {title: \"Outcome\", field: \"outcome\"},\n        {title: \"Onset\", field: \"onset\", editComponent: () => {\n            return (\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        disableFuture=\"true\"\n                        format=\"dd/MM/yyyy\"\n                        value={onset}\n                        onChange={handleDateChange}\n                        variant=\"inline\"\n                    />\n                </MuiPickersUtilsProvider>\n            )\n        }},\n        {title: \"Country\", field: \"country\", editComponent: () => {\n            return (\n                <Select value={country} onChange={(e) => setCountry(e.target.value)}>\n                    {countries.map((item)=> {\n                        return <MenuItem key={item._id} value={item.name}>{item.name}</MenuItem>\n                    })}\n                </Select>\n            )\n          }\n        },\n        /*{title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Select value={city} onChange={(e) => setCity(e.target.value)}>\n                    {cities.map((item, i)=> {\n                        return <MenuItem key={i} value={item}>{item}</MenuItem>\n                    })}\n                </Select>\n            )\n        }}*/\n        {title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Autocomplete\n                    value={city}\n                    onChange={(e, newValue) => setCity(newValue)}\n                    id=\"combo-box-city\"\n                    options={cities}\n                    style={{ width: 200 }}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => <TextField {...params}  />}\n                />\n            )\n        }},\n        {title: \"Duration (days)\", field: \"duration\", type: 'numeric' },\n        {title: \"Severity\", field: \"severity\", lookup: {\"low\": \"low\", \"medium\": \"medium\", \"high\": \"high\"}},\n        {title: \"Admission date\", field: \"admission\", editComponent: () => {\n            return (\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        disableFuture=\"true\"\n                        format=\"dd/MM/yyyy\"\n                        value={admission}\n                        onChange={handleAdmissionDateChange}\n                        variant=\"inline\"\n                    />\n                </MuiPickersUtilsProvider>\n            )\n        }},\n        {title: \"Discharged/death date\", field: \"discharged\", editComponent: () => {\n            return (\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        disableFuture=\"true\"\n                        format=\"dd/MM/yyyy\"\n                        value={discharged}\n                        onChange={handleDischargedDateChange}\n                        variant=\"inline\"\n                    />\n                </MuiPickersUtilsProvider>\n            )\n        }},\n        {title: \"Comment\", field: \"comment\"},\n        {title: \"Created by\", field: \"created_by\", hidden: true},\n        {title: \"Updated by\", field: \"updated_by\", hidden: true},\n        {title: \"Created at\", field: \"created_at\", editable: 'never', render: rowData => <Link \n            component=\"button\" variant=\"body2\" onClick={() => history.push(\"/profile/\"+rowData.created_by)}>{rowData == undefined ? \" \" : rowData.created_at}\n        </Link>},\n        {title: \"Updated at\", field: \"updated_at\", editable: 'never', render: rowData => <Link \n            component=\"button\" variant=\"body2\" onClick={() => history.push(\"/profile/\"+rowData.updated_by)} href=\"#\">{rowData == undefined ? \" \" : rowData.updated_at}\n        </Link>}\n    ]\n\n    //error\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n    const [data, setData] = useState([])\n\n    //list\n    const [symptoms, setSymptoms] = useState([])\n    const [symptomClasses, setSymptomClasses] = useState([])\n    const [cities, setCities] = useState([])\n    const [countries, setCountries] = useState([])\n\n    //non-list data\n    const [symptom, setSymptom] = useState('')\n    const [symptomClass, setSymptomClass] = useState('')\n    const [city, setCity] = useState('')\n    const [country, setCountry] = useState('')\n    const [admission, setAdmission] = useState(new Date('1987-08-18T21:11:54'));\n    const [discharged, setDischarged] = useState(new Date('1987-08-18T21:11:54'));\n    const [onset, setOnset] = useState(new Date('1987-08-18T21:11:54'));\n\n    const {healthworker } = useContext(LoginContext); \n    const [patient, setPatient] = useState({})\n\n    //backdrop\n    const [open, setOpen] = useState(false);\n    const [loadCountry, setLoadCountry] = useState(false)\n    const [loadCity, setLoadCity] = useState(false)\n\n    //date picker\n    const handleDateChange = (date) => {\n        setOnset(date);\n    };\n\n    const handleAdmissionDateChange = (date) => {\n        setAdmission(date);\n    };\n\n    const handleDischargedDateChange = (date) => {\n        setDischarged(date)\n    }\n\n    useEffect(() => { \n        api.get(\"/patients/\"+match.params.id, api_header())\n        .then(res => {\n            let fname = res.data.patient.name.first_name\n            let lname = res.data.patient.name.last_name\n            setPatient({id: match.params.id, firstname: fname, lastname: lname})\n        })\n        .catch(error=>{\n            setIserror(true)\n            setErrorMessages([\"Cannot get patient details. Please try again later. Contact admin if problem persist!\"])\n        })\n        \n    }, [])\n\n    //get all country\n    useEffect(() => { \n        api.get(\"/countries\", api_header())\n            .then(res => {                  \n                setCountries(res.data)\n                setIserror(false)\n                setErrorMessages([])\n             })\n             .catch(error=>{\n                 setIserror(true)\n                 setErrorMessages([\"Could not load countries. Try again later and contact admin if problem persist\"])\n             })\n    }, [])\n\n    //get cities from country\n    useEffect(() => { \n        setOpen(true)\n        if(country){\n            api.get(\"/countries/\"+country)\n            .then(res => {\n                setCities(res.data.cities.sort())\n                //change city value if the city is not in the selected country\n                if(! res.data.cities.includes(city)){\n                    setCity(res.data.cities[0])\n                }\n                setIserror(false)\n                setErrorMessages([])\n\n                setTimeout(() => {\n                    setOpen(false)\n                }, 100);\n            })\n            .catch(error=>{\n                setIserror(true)\n                setErrorMessages([\"Could not load cities. Try again later and contact admin if problem persist\"])\n                setOpen(false)\n            })\n        }\n    }, [country])\n\n    // Get symptoms and symptom class\n    useEffect(() => {\n        setOpen(true)\n        api.get(\"/symptoms\", api_header())\n        .then(res=>{\n            setSymptoms(res.data[0].symptoms)\n            setTimeout(() => {\n                setIserror(false)\n                setErrorMessages([])\n                setOpen(false)\n            }, 250);\n\n        })\n        .catch(error=>{\n            \n            setIserror(true)\n            setErrorMessages([\"Error fetching list of symptoms. Try again later and contact admin if problem persist\"])\n        })\n\n        api.get(\"/symptom_class\", api_header())\n        .then(res=>{\n            setSymptomClasses(res.data[0].classes)\n\n            setTimeout(() => {\n                setIserror(false)\n                setErrorMessages([])\n                setOpen(false)\n            }, 250);\n        })\n        .catch(error=>{\n\n            if(error.response.data.message === \"Auth failed\"){\n                history.push(\"/healthworker/logout\")\n                setOpen(false)\n            }else{\n                setOpen(false)\n                setIserror(true)\n                setErrorMessages([\"Error fetching list of symptoms class. Try again later and contact admin if problem persist\"])\n            }\n        })\n    }, [])\n\n\n    // Get symptoms data for this patient\n    useEffect(() => {\n        setOpen(true)\n        api.get(\"/patient_symptoms/patients/\"+match.params.id, api_header())\n            .then(res=>{\n                var tableData = [];\n                if(res.data.patient_symptoms){\n                    if(res.data.patient_symptoms.length > 0){\n                        const returnedData = res.data.patient_symptoms\n                        returnedData.forEach((symp)=> {\n                            tableData.push({\n                                id: symp._id,\n                                symptom: symp.symptom,\n                                symptom_class: symp.symptom_class,\n                                outcome: symp.outcome,\n                                onset: symp.onset,\n                                country: symp.location.country,\n                                city: symp.location.city,\n                                duration: symp.duration,\n                                severity: symp.severity,\n                                admission: symp.admission_date,\n                                discharged: symp.discharged_death_date,\n                                comment: symp.comment,\n                                created_by: symp.created_by,\n                                created_at: symp.created_at,\n                                updated_by: symp.updated_by,\n                                updated_at: symp.updated_at\n                            })\n                        });\n                        setTimeout(() => {\n                            setData(tableData)\n                            setOpen(false)\n                        }, 500)\n                        \n                    }\n                }else{\n                    setTimeout(() => {\n                        setData(tableData)\n                        setOpen(false)\n                    }, 500)\n                }\n                \n            })\n            .catch(error=>{\n\n                if(error.response.data.message === \"Auth failed\"){\n                    history.push(\"/healthworker/logout\")\n                    setOpen(false)\n                }else{\n                    setIserror(true)\n                    setErrorMessages([\"Error fetching patient symptom data. Try again later and contact admin if problem persist\"])\n                    setOpen(false)\n                }\n            })\n    }, [])\n\n    const handleRowAdd = (newRow, resolve, reject) => {\n        let errMsg = []\n        if(symptom === \"\"){\n            errMsg.push(\"Please select symptom\")\n        }\n        if(symptomClass === \"\"){\n            errMsg.push(\"Please select symptom class\")\n        }\n        if(country == \"\"){\n            errMsg.push(\"Please select country\")\n        }\n        if(city == \"\"){\n            errMsg.push(\"Please select city\")\n        }\n        if(newRow.outcome === undefined){\n            errMsg.push(\"Please enter outcome\")\n        }\n        if(onset === \"\"){\n            errMsg.push(\"Please select onset date\")\n        }\n        if(newRow.duration === undefined){\n            errMsg.push(\"Please enter duration (days)\")\n        }\n        if(newRow.severity === undefined){\n            errMsg.push(\"Please select severity\")\n        }\n        if(admission === \"\"){\n            errMsg.push(\"Select hospital admission date\")\n        }\n        if(discharged === \"\"){\n            errMsg.push(\"Select discharged or death date\")\n        }\n\n        if(errMsg.length < 1){\n            if(errMsg.length < 1){\n                const dataToAdd = {\n                    patient : {\n                        _id: patient.id,\n                        name: {\n                            first_name : patient.firstname,\n                            last_name : patient.lastname\n                        }\n                    },\n                    symptom : symptom,\n                    symptom_class : symptomClass,\n                    outcome: newRow.outcome,\n                    onset : onset,\n                    location : {\n                        country : country,\n                        city : city\n                    },\n                    duration : newRow.duration,\n                    severity : newRow.severity,\n                    admission_date : admission,\n                    discharged_death_date : discharged,\n                    comment: newRow.comment,\n                    created_by: healthworker.id,\n                    created_at: new Date(),\n                    updated_by: healthworker.id,\n                    updated_at: new Date()\n                };\n                \n                api.post(\"/patient_symptoms\", dataToAdd, api_header())\n                    .then(res => {\n                        const symp = res.data.createdSymptoms\n                        const rowToAdd = {\n                            id: symp._id,\n                            symptom: symp.symptom,\n                            symptom_class: symp.symptom_class,\n                            outcome: symp.outcome,\n                            onset: symp.onset,\n                            country: symp.location.country,\n                            city: symp.location.city,\n                            duration: symp.duration,\n                            severity: symp.severity,\n                            admission: symp.admission_date,\n                            discharged: symp.discharged_death_date,\n                            comment: symp.comment,\n                            created_by: symp.created_by,\n                            created_at: symp.created_at,\n                            updated_by: symp.updated_by,\n                            updated_at: symp.updated_at\n                        }\n                        \n                        const newTableData = [...data];\n                        newTableData.push(rowToAdd)\n                        setData(newTableData)\n                        setErrorMessages([])\n                        setIserror(false)\n                    \n                        setTimeout(() => {\n                            resolve()\n                        }, 500);\n                    })\n                    .catch(error=> {\n                        setIserror(true)\n                        setErrorMessages([\"Error adding patient symptoms! Please try again later. If problem persist, contact admin\"])\n                        reject()\n                    })\n            }else{\n                setErrorMessages(errMsg)\n                setIserror(true)\n                reject()\n            }\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            reject()\n        }\n    }\n\n\n    const handleRowUpdate = (newData, oldData, resolve, reject) => {\n        let errMsg = []\n        if(newData.outcome === \"\"){\n            errMsg.push(\"Please enter outcome\")\n        }\n        if(newData.duration === \"\"){\n            errMsg.push(\"Please enter duration (days)\")\n        }\n        if(newData.severity === \"\"){\n            errMsg.push(\"Please select severity\")\n        }\n\n        const symptom_id = newData.id \n       \n        if(errMsg.length < 1){\n            if(errMsg.length < 1){\n                const data_updated = [\n                    {\"propName\": \"symptom\", \"value\": symptom || oldData.symptom},\n                    {\"propName\": \"symptom_class\", \"value\": symptomClass || oldData.symptom_class},\n                    {\"propName\": \"outcome\", \"value\": newData.outcome},\n                    {\"propName\": \"onset\", \"value\": onset || oldData.onset},\n                    {\"propName\": \"location.country\", \"value\": country || oldData.country},\n                    {\"propName\": \"location.city\", \"value\": city || oldData.city},\n                    {\"propName\": \"duration\", \"value\": newData.duration},\n                    {\"propName\": \"severity\", \"value\": newData.severity},\n                    {\"propName\": \"admission_date\", \"value\": admission || oldData.admission},\n                    {\"propName\": \"discharged_death_date\", \"value\": discharged || oldData.disableFuture},\n                    {\"propName\": \"comment\", \"value\": newData.comment},\n                    {\"propName\": \"updated_by\", \"value\": healthworker.id},\n                    {\"propName\": \"updated_at\", \"value\": new Date()},\n                ]\n                api.patch(\"/patient_symptoms/\"+symptom_id, data_updated, api_header())\n                    .then(res => {\n                        const symp = res.data.updatedSymptoms\n                        const updatedRowData = {\n                            id: symp._id,\n                            symptom: symp.symptom,\n                            symptom_class: symp.symptom_class,\n                            outcome: symp.outcome,\n                            onset: symp.onset,\n                            country: symp.location.country,\n                            city: symp.location.city,\n                            duration: symp.duration,\n                            severity: symp.severity,\n                            admission: symp.admission_date,\n                            discharged: symp.discharged_death_date,\n                            comment: symp.comment,\n                            created_by: symp.created_by,\n                            created_at: symp.created_at,\n                            updated_by: symp.updated_by,\n                            updated_at: symp.updated_at\n                        }\n\n                        //update table\n                        const newTableData = [...data];\n                        newTableData[data.indexOf(oldData)] = updatedRowData\n                        \n                        setData(newTableData)\n                        setErrorMessages([])\n                        setIserror(false)\n\n                        setTimeout(() => {\n                            resolve()\n                        }, 500);\n                    })\n                    .catch(error=> {\n                        setIserror(true)\n                        setErrorMessages([\"Error updating patient symptoms! Please try again later. If problem persist, contact admin\"])\n                        reject()\n                    })\n            }else{\n                setErrorMessages(errMsg)\n                setIserror(true)\n                reject()\n            }\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            reject()\n        }\n    }\n\n\n    return (\n        <div className={classes.root}>  \n        <Backdrop className={classes.backdrop} open={open}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        {!open &&\n            <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}>{null || patient.firstname}, Symptoms</h1> \n        }\n                \n        <div>\n            {iserror && \n                <Alert severity=\"error\">\n                    {errorMessages.map((msg, i) => {\n                        return <div key={i}>{msg}</div>\n                    })}\n                </Alert>\n            }\n                \n        </div>\n\n        <div style={{ maxWidth: \"100%\" }}>\n                <MaterialTable\n                    title=\"\"\n                    icons={tableIcons}\n                    columns={columns}\n                    data={data}\n                    editable={{\n                        onRowAdd: (newRow) =>\n                        new Promise((resolve, reject) => {\n                            handleRowAdd(newRow, resolve, reject);\n                        }),\n                        onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            handleRowUpdate(newData, oldData, resolve, reject);\n                        }),\n                        onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                            setTimeout(() => {\n                            resolve();\n                            \n                            }, 600);\n                        }),\n                    }}\n\n                    />\n            </div>                    \n        </div>\n    );\n\n}\n\nexport default Symptoms;","import React, { useEffect, useState, useContext } from 'react'\nimport axios from 'axios'\nimport ReactDOM from \"react-dom\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {Grid} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport { useHistory } from 'react-router-dom';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Link from '@material-ui/core/Link';\nimport { LoginContext } from '../../context/LoginContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nfunction api_header(){\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    if(storedUser){\n        const head_element = {\n            headers: {\n                Authorization: \"Bearer \" + storedUser.token\n            }\n        }\n        return head_element\n    }else{\n        return null;\n    }\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5)\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n  }));\n\nfunction Diagnostics({match}){\n    const classes = useStyles();\n    const history = useHistory();\n    const {healthworker } = useContext(LoginContext); \n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const columns = [\n        {title: \"id\", field: \"id\", hidden: true},\n        /*{title: \"Diagnostic\", field: \"diagnostic\", editComponent: () => {\n            return (\n                <Select value={diagnostic} onChange={(e) => setDiagnostic(e.target.value)}>\n                    {diagnostics.map((item, i)=> {\n                        return <MenuItem key={i} value={item}>{item}</MenuItem>\n                    })}\n                </Select>\n            )\n          }\n        },*/\n\n        {title: \"Diagnostic\", field: \"diagnostic\", editComponent: () => {\n            return (\n                <Autocomplete\n                    value={diagnostic}\n                    onChange={(e, newValue) => setDiagnostic(newValue)}\n                    id=\"combo-box-diagnostics\"\n                    options={diagnostics}\n                    style={{ width: 200 }}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => <TextField {...params}  />}\n                />\n            )\n        }},\n\n        {title: \"Outcome\", field: \"outcome\"},\n        {title: \"Diagnostic date\", field: \"diagnostic_date\", editComponent: () => {\n            return (\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        disableFuture=\"true\"\n                        format=\"dd/MM/yyyy\"\n                        value={diagnosticDate}\n                        onChange={handleDateChange}\n                        variant=\"inline\"\n                    />\n                </MuiPickersUtilsProvider>\n            )\n        }},\n        {title: \"Country\", field: \"country\", editComponent: () => {\n            return (\n                <Select value={country} onChange={(e) => setCountry(e.target.value)}>\n                    {countries.map((item)=> {\n                        return <MenuItem key={item._id} value={item.name}>{item.name}</MenuItem>\n                    })}\n                </Select>\n            )\n          }\n        },\n        /*{title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Select value={city} onChange={(e) => setCity(e.target.value)}>\n                    {cities.map((item, i)=> {\n                        return <MenuItem key={i} value={item}>{item}</MenuItem>\n                    })}\n                </Select>\n            )\n        }}*/\n        {title: \"City\", field: \"city\", editComponent: () => {\n            return (\n                <Autocomplete\n                    value={city}\n                    onChange={(e, newValue) => setCity(newValue)}\n                    id=\"combo-box-diag-city\"\n                    options={cities}\n                    style={{ width: 200 }}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => <TextField {...params}  />}\n                />\n            )\n        }},\n        {title: \"Comment\", field: \"comment\"},\n        {title: \"Created by\", field: \"created_by\", hidden: true},\n        {title: \"Updated by\", field: \"updated_by\", hidden: true},\n        {title: \"Created at\", field: \"created_at\", editable: 'never', render: rowData => <Link \n            component=\"button\" variant=\"body2\" onClick={() => history.push(\"/profile/\"+rowData.created_by)}>{rowData == undefined ? \" \" : rowData.created_at}\n        </Link>},\n        {title: \"Updated at\", field: \"updated_at\", editable: 'never', render: rowData => <Link \n            component=\"button\" variant=\"body2\" onClick={() => history.push(\"/profile/\"+rowData.updated_by)} href=\"#\">{rowData == undefined ? \" \" : rowData.updated_at}\n        </Link>}\n    ]\n\n    //error\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n    const [data, setData] = useState([])\n\n    //list\n    const [diagnostics, setDiagnostics] = useState([])\n    const [cities, setCities] = useState([])\n    const [countries, setCountries] = useState([])\n\n    //non-list data\n    const [diagnostic, setDiagnostic] = useState('')\n    const [diagnosticDate, setDiagnosticDate] = useState(new Date('1987-08-18T21:11:54'));\n    const [city, setCity] = useState('')\n    const [country, setCountry] = useState('')\n\n    const [patient, setPatient] = useState({})\n\n    //backdrop\n    const [open, setOpen] = useState(false);\n    \n    //date picker\n    const handleDateChange = (date) => {\n        setDiagnosticDate(date);\n    }\n\n    //get all country\n    useEffect(() => { \n        api.get(\"/countries\", api_header())\n            .then(res => {                  \n                setCountries(res.data)\n                setIserror(false)\n                setErrorMessages([])\n             })\n             .catch(error=>{\n                 setIserror(true)\n                 setErrorMessages([\"Could not load countries. Try again later and contact admin if problem persist\"])\n             })\n    }, [])\n\n    useEffect(() => { \n        api.get(\"/patients/\"+match.params.id, api_header())\n        .then(res => {\n            let fname = res.data.patient.name.first_name\n            let lname = res.data.patient.name.last_name\n            setPatient({id: match.params.id, firstname: fname, lastname: lname})\n        })\n        .catch(error=>{\n            setIserror(true)\n            setErrorMessages([\"Cannot get patient details. Please try again later. Contact admin if problem persist!\"])\n            \n        })\n        \n    }, [])\n\n    //get cities from country\n    useEffect(() => { \n        setOpen(true)\n        if(country){\n            api.get(\"/countries/\"+country)\n            .then(res => {\n                setCities(res.data.cities.sort())\n                //change city value if the city is not in the selected country\n                if(! res.data.cities.includes(city)){\n                    setCity(res.data.cities[0])\n                }\n                setIserror(false)\n                setErrorMessages([])\n\n                setTimeout(() => {\n                    setOpen(false)\n                }, 100);\n            })\n            .catch(error=>{\n\n                setIserror(true)\n                setErrorMessages([\"Could not load cities. Try again later and contact admin if problem persist\"])\n                setOpen(false)\n            })\n        }\n    }, [country])\n\n    // Get diagnostics\n    useEffect(() => {\n        setOpen(true)\n        api.get(\"/diagnostics\", api_header())\n        .then(res=>{\n            setDiagnostics(res.data[0].diagnostics)\n            \n            setTimeout(() => {\n                setOpen(false)\n                setIserror(false)\n                setErrorMessages([])\n            }, 500);\n\n            \n        })\n        .catch(error=>{\n            setIserror(true)\n            setErrorMessages([\"Error fetching diagnostics list. Try again later and contact admin if problem persist\"])\n            setOpen(false)\n            \n        })\n    }, [])\n\n\n    // Get diagnostic data for this patient\n    useEffect(() => {\n        setOpen(true)\n        api.get(\"/patient_diagnostics/patients/\"+match.params.id, api_header())\n        .then(res=>{\n            var tableData = [];\n            if(res.data.patient_diagnostics){\n                if(res.data.patient_diagnostics.length > 0){\n                    const returnedData = res.data.patient_diagnostics\n                    \n                    returnedData.forEach((diag)=> {\n                        tableData.push({\n                            id: diag._id,\n                            diagnostic: diag.diagnostic,\n                            diagnostic_date: diag.diagnostic_date,\n                            outcome: diag.outcome,\n                            country: diag.location.country,\n                            city: diag.location.city,\n                            comment: diag.comment,\n                            created_by: diag.created_by,\n                            created_at: diag.created_at,\n                            updated_by: diag.updated_by,\n                            updated_at: diag.updated_at\n                        })\n                    });\n                    \n                    setTimeout(() => {\n                        setData(tableData)\n                        setOpen(false)\n                    }, 500)\n                }\n                \n            }else{\n                setTimeout(() => {\n                    setData(tableData)\n                    setOpen(false)\n                }, 50)\n            }\n            \n        })\n        .catch(error=>{\n            setIserror(true)\n            setErrorMessages([\"Error fetching diagnostics. Try again later and contact admin if problem persist\"])\n            setOpen(false)\n            \n        })\n    }, [])\n\n    const handleRowAdd = (newRow, resolve, reject) => {\n        let errMsg = []\n        if(diagnostic === \"\"){\n            errMsg.push(\"Please select diagnostic\")\n        }\n        if(country === \"\"){\n            errMsg.push(\"Please select country\")\n        }\n        if(city === \"\"){\n            errMsg.push(\"Please select city\")\n        }\n        if(newRow.outcome === undefined){\n            errMsg.push(\"Please enter outcome\")\n        }\n        if(diagnosticDate === \"\"){\n            errMsg.push(\"Select diagnostic date date\")\n        }\n\n        if(errMsg.length < 1){\n            if(errMsg.length < 1){\n                const dataToAdd = {\n                    patient : {\n                        _id: patient.id,\n                        name: {\n                            first_name : patient.firstname,\n                            last_name : patient.lastname\n                        }\n                    },\n                    diagnostic : diagnostic,\n                    outcome: newRow.outcome,\n                    diagnostic_date : diagnosticDate,\n                    location : {\n                        country : country,\n                        city : city\n                    },\n                    comment: newRow.comment,\n                    created_by: healthworker.id,\n                    created_at: new Date(),\n                    updated_by: healthworker.id,\n                    updated_at: new Date()\n                };\n                \n                api.post(\"/patient_diagnostics\", dataToAdd, api_header())\n                    .then(res => {\n                        console.log(\"ldjflasjfla\")\n                        console.log(res.data)\n\n                        const diag = res.data.createdDiagnostic;\n\n                        const rowToAdd = {\n                            id: diag._id,\n                            diagnostic: diag.diagnostic,\n                            diagnostic_date: diag.diagnostic_date,\n                            outcome: diag.outcome,\n                            country: diag.location.country,\n                            city: diag.location.city,\n                            comment: diag.comment,\n                            created_by: diag.created_by,\n                            created_at: diag.created_at,\n                            updated_by: diag.updated_by,\n                            updated_at: diag.updated_at\n                        }\n\n                        const newTableData = [...data];\n                        newTableData.push(rowToAdd)\n                        setData(newTableData)\n                        setErrorMessages([])\n                        setIserror(false)\n                    \n                        setTimeout(() => {\n                            resolve()\n                        }, 500);\n                    })\n                    .catch(error=> {\n                        setIserror(true)\n                        setErrorMessages([\"Error adding patient diagnostic! Please try again later. If problem persist, contact admin\"])\n                        reject()\n                        \n\n                    })\n            }else{\n                setErrorMessages(errMsg)\n                setIserror(true)\n                reject()\n            }\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            reject()\n        }\n    }\n\n\n    const handleRowUpdate = (newData, oldData, resolve, reject) => {\n        let errMsg = []\n        \n        if(newData.outcome === \"\"){\n            errMsg.push(\"Please enter outcome\")\n        }\n        \n        const diagnostic_id = newData.id \n\n        if(errMsg.length < 1){\n\n            if(errMsg.length < 1){\n                const data_updated = [\n                    {\"propName\": \"diagnostic\", \"value\": diagnostic || oldData.diagnostic},\n                    {\"propName\": \"outcome\", \"value\": newData.outcome},\n                    {\"propName\": \"diagnostic_date\", \"value\": diagnosticDate || oldData.diagnostic_date},\n                    {\"propName\": \"location.country\", \"value\": country || oldData.country},\n                    {\"propName\": \"location.city\", \"value\": city || oldData.city},\n                    {\"propName\": \"comment\", \"value\": newData.comment},\n                    {\"propName\": \"updated_by\", \"value\": healthworker.id},\n                    {\"propName\": \"updated_at\", \"value\": new Date()},\n                ]\n                api.patch(\"/patient_diagnostics/\"+diagnostic_id, data_updated, api_header())\n                    .then(res => {\n                        const diag = res.data.updatedDiagnostics;\n                        const updatedRowData = {\n                            id: diag._id,\n                            diagnostic: diag.diagnostic,\n                            diagnostic_date: diag.diagnostic_date,\n                            outcome: diag.outcome,\n                            country: diag.location.country,\n                            city: diag.location.city,\n                            comment: diag.comment,\n                            created_by: diag.created_by,\n                            created_at: diag.created_at,\n                            updated_by: diag.updated_by,\n                            updated_at: diag.updated_at\n                        }\n\n                        //update table\n                        const newTableData = [...data];\n                        newTableData[data.indexOf(oldData)] = updatedRowData\n                        \n                        setData(newTableData)\n                        setErrorMessages([])\n                        setIserror(false)\n\n                        setTimeout(() => {\n                            resolve()\n                        }, 500);\n\n                    })\n                    .catch(error=> {\n                        setIserror(true)\n                        setErrorMessages([\"Error updating patient diagnostic! Please try again later. If problem persist, contact admin\"])\n                        reject()\n                    })\n            }else{\n                setErrorMessages(errMsg)\n                setIserror(true)\n                reject()\n            }\n        }else{\n            setErrorMessages(errMsg)\n            setIserror(true)\n            reject()\n        }\n    }\n\n\n    return (\n        <div className={classes.root}>  \n            <Backdrop className={classes.backdrop} open={open}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>  \n            {!open &&\n                <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}>{null || patient.firstname}, Diagnostics</h1> \n            }        \n            \n\n            <div>\n                {iserror && \n                    <Alert severity=\"error\">\n                        {errorMessages.map((msg, i) => {\n                            return <div key={i}>{msg}</div>\n                        })}\n                    </Alert>\n                }\n                    \n            </div>\n\n            <div style={{ maxWidth: \"100%\" }}>\n                <MaterialTable\n                    title=\"\"\n                    icons={tableIcons}\n                    columns={columns}\n                    data={data}\n                    editable={{\n                        onRowAdd: (newRow) =>\n                        new Promise((resolve, reject) => {\n                            handleRowAdd(newRow, resolve, reject);\n                        }),\n                        onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            handleRowUpdate(newData, oldData, resolve, reject);\n                        }),\n                        onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                            setTimeout(() => {\n                            resolve();\n                            \n                            }, 600);\n                        }),\n                    }}\n\n                />\n            </div>                    \n\n        </div>\n    );\n\n}\n\nexport default Diagnostics;","\nimport axios from 'axios'\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_MY_HOST\n})\n\nexport const menuReducer = (state, action) => {\n    switch(action.type){\n        case 'GET_NUM_DOCTORS':\n            api.get(\"/healthworkers/number\", action.token)\n                .then(res => {\n                    state.num_doctors = res.data.count\n                    return state\n                })\n                .catch(error=> {\n                    state.num_doctors = 0\n                    return state\n                })\n        case 'GET_NUM_PATIENTS':\n            api.get(\"/patients/number\")\n                .then(res => {\n                    state.num_patients = res.data.count\n                    return state\n                })\n                .catch(error=> {\n                    state.num_patients = 0\n                    return state\n                })\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer} from 'react';\nimport { menuReducer } from '../reducers/menuReducer';\n\nexport const MenuContext = createContext();\n\nconst MenuContextProvider = (props) => {\n\n    const [state, dispatched] = useReducer(menuReducer, {num_doctors: 0, num_patients: 0});\n    return (\n        <MenuContext.Provider value={{state, dispatched}}>\n            {props.children}\n        </MenuContext.Provider>\n    )\n}\n\nexport default MenuContextProvider;","import React, { useContext, useState }  from 'react';\nimport Button from '@material-ui/core/Button';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { useHistory } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { LoginContext } from '../../context/LoginContext';\n\n\nexport default function SignedOut() {\n    const history = useHistory();\n    const {dispatch } = useContext(LoginContext); //for login out\n    const handleRedirect = () => {\n        dispatch({type: 'LOGOUT'});\n        history.push(\"/login\")\n    }\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <p>\n                <LockIcon style={{ color: \"grey\", fontSize: 150 }} />\n            </p>\n            <h1 style={{padding:10, color: 'rgba(245, 0, 87, 1)'}}>Session expired</h1>\n            <p style={{fontSize: \"large\"}}>\n                You have been logged out due to inactivity. {<Button onClick={handleRedirect} color=\"primary\"><b style={{fontSize: \"large\"}}>SIGN IN</b></Button>} again!\n            </p>\n            <Divider />\n            <p>\n                <div>Unauthorize use of the application is prohibit and subject to {<b>prosecution by law</b>}</div>\n                <div style={{marginTop: \"50px\", color: \"grey\"}}>\n                    &copy; Copyright {new Date().getFullYear()}  All rights reserved!\n                </div>\n            </p>\n        </div>\n    )\n}\n","import clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from 'react-avatar';\nimport Alert from '@material-ui/lab/Alert';\nimport Badge from '@material-ui/core/Badge';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport GroupIcon from '@material-ui/icons/Group';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport Button from '@material-ui/core/Button';\nimport { useLocation } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react'\nimport { indigo, pink } from '@material-ui/core/colors';\n\n\nimport { Switch, Route } from 'react-router-dom';\nimport Login from '../auth/Login';\nimport Signup from '../auth/Signup'\nimport Dashboard from '../healthworkers/Dashboard'\nimport Profile from '../healthworkers/Profile'\nimport HealthWorkers from '../healthworkers/Healthworkers'\nimport Patients from '../patients/Patients'\nimport Bio from '../patients/Bio'\nimport Metrics from '../patients/Metrics'\nimport Symptoms from '../patients/Symptoms'\nimport Diagnostics from '../patients/Diagnostics'\nimport { LoginContext } from '../../context/LoginContext';\nimport { MenuContext } from '../../context/MenuContext';\nimport { PatientContext } from '../../context/PatientContext'\nimport SignedOut from '../auth/SignedOut'\nimport axios from 'axios'\n\n\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_MY_HOST\n})\n\nconst drawerWidth = 240;\nconst mybgcolor = indigo[\"500\"];\nconst mybgcolorAppbar = indigo[\"400\"];\nconst dashboardListItem = pink[\"500\"]\nconst hoverBgColor = pink[\"50\"]\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    backgroundColor: mybgcolorAppbar\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    height:\"100vh\", \n    backgroundColor: mybgcolor,\n    padding: theme.spacing(1)\n\n  },\n  listItems: {\n    margin: 10,\n    color: 'white',\n    \"&:hover\": {\n      backgroundColor: \"rgba(255,255,255,0.2)\",\n      borderRadius: 10\n    }\n  },\n\n  listItemDone: {\n    margin: 10,\n    color: 'white',\n    borderRadius: 10,\n    \"&,&:focus\": {\n      backgroundColor: dashboardListItem,\n      \n    },\n  },\n  icon_color: {\n    color: 'white',\n    fontSize: 30\n  },\n  // necessary for content to be below app bar\n  nested: {\n    marginLeft: theme.spacing(3),\n    color: 'white',\n    marginRight: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    color: 'white',\n    \"&:hover\": {\n      backgroundColor: \"rgba(255,255,255,0.2)\",\n      borderRadius: 10\n    }\n  },\n  nestedDone: {\n    marginLeft: theme.spacing(3),\n    marginRight: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    color: 'white',\n    borderRadius: 10,\n    \"&,&:focus\": {\n      backgroundColor: dashboardListItem\n    },\n  },\n  logo: {\n    color: \"white\",\n    alignItems: \"center\"\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function Main() {\n\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const [openNested, setOpenNested] = React.useState(false); //nested list\n  const [open, setOpen] = React.useState(false); //for drawer\n  const {dispatch } = useContext(LoginContext); //for login out\n\n  const [patientMenu, setShowPatientMenu] = useState(false)\n  const [patientId, setPatientId] = useState('')\n  const [logout, setLogout] = useState(true)\n\n  //error\n  const [iserror, setIserror] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n  const [countPatient, setCountPatient] = useState(0)\n  const [countDoctors, setCountDoctors] = useState(0)\n  const [healthworker, setHealthworker] = useState({})\n  const [countMetrics, setCountMetrics] = useState(0)\n  const [countSymptoms, setCountSymptoms] = useState(0)\n  const [countDiagnostics, setCountDiagnostics] = useState(0)\n\n  //menu states\n  const [profileClicked, setProfileClicked] = useState(false)\n  const [dashClicked, setDashClicked] = useState(true)\n  const [doctorClicked, setDoctorClicked] = useState(false)\n  const [patientClicked, setPatientClicked] = useState(false)\n  const [bioClicked, setBioClicked] = useState(false)\n  const [metricClicked, setMetricClicked] = useState(false)\n  const [symClicked, setSymClicked] = useState(false)\n  const [diaClicked, setDiaClicked] = useState(false)\n\n  //get num of health worker\n  const { state, dispatched } = useContext(MenuContext)\n  const { patientData, dispatchPatient } = useContext(PatientContext)\n\n  const mySwitch = (data) => {\n    switch (data) {\n      case \"click_dashboard\":\n        setProfileClicked(false)\n        setDashClicked(true)\n        setDoctorClicked(false)\n        setPatientClicked(false)\n        setBioClicked(false)\n        setMetricClicked(false)\n        setSymClicked(false)\n        setDiaClicked(false)\n        break\n      case \"click_profile\":\n        setProfileClicked(true)\n        setDashClicked(false)\n        setDoctorClicked(false)\n        setPatientClicked(false)\n        setBioClicked(false)\n        setMetricClicked(false)\n        setSymClicked(false)\n        setDiaClicked(false)\n        break;\n      case \"click_doctors\":\n        setProfileClicked(false)\n        setDashClicked(false)\n        setDoctorClicked(true)\n        setPatientClicked(false)\n        setBioClicked(false)\n        setMetricClicked(false)\n        setSymClicked(false)\n        setDiaClicked(false)\n        break\n      case \"click_patients\":\n        setProfileClicked(false)\n        setDashClicked(false)\n        setDoctorClicked(false)\n        setPatientClicked(true)\n        setBioClicked(false)\n        setMetricClicked(false)\n        setSymClicked(false)\n        setDiaClicked(false)\n        break;\n      case \"click_bio\":\n        setProfileClicked(false)\n        setDashClicked(false)\n        setDoctorClicked(false)\n        setPatientClicked(false)\n        setBioClicked(true)\n        setMetricClicked(false)\n        setSymClicked(false)\n        setDiaClicked(false)\n        break;\n      case \"click_metrics\":\n        setProfileClicked(false)\n        setDashClicked(false)\n        setDoctorClicked(false)\n        setPatientClicked(false)\n        setBioClicked(false)\n        setMetricClicked(true)\n        setSymClicked(false)\n        setDiaClicked(false)\n        break;\n      case \"click_symptoms\":\n        setProfileClicked(false)\n        setDashClicked(false)\n        setDoctorClicked(false)\n        setPatientClicked(false)\n        setBioClicked(false)\n        setMetricClicked(false)\n        setSymClicked(true)\n        setDiaClicked(false)\n        break;\n      case \"click_diagnostics\":\n        setProfileClicked(false)\n        setDashClicked(false)\n        setDoctorClicked(false)\n        setPatientClicked(false)\n        setBioClicked(false)\n        setMetricClicked(false)\n        setSymClicked(false)\n        setDiaClicked(true)\n        break;\n      default:\n        setProfileClicked(false)\n        setDashClicked(true)\n        setDoctorClicked(false)\n        setPatientClicked(false)\n        setBioClicked(false)\n        setMetricClicked(false)\n        setSymClicked(false)\n        setDiaClicked(false)\n        break;\n    }\n    \n  }\n\n  const handleProfileClick = () => {\n    mySwitch(\"click_profile\")\n    history.push(\"/profile/\"+healthworker._id)\n  }\n\n  const handleDashboardClick = () => {\n    mySwitch(\"click_dashboard\")\n    history.push(\"/dashboard/\"+healthworker._id) \n  }\n\n  const handleDoctorClick = () => {\n    mySwitch(\"click_doctors\")\n    history.push(\"/healthworkers\") \n  }\n\n  const handlePatientsClick = () => {\n    mySwitch(\"click_patients\")\n    history.push(\"/patients\")\n  }\n\n  const handleBioClick = () => {\n    mySwitch(\"click_bio\")\n    history.push(\"/patients/biodata/\"+ patientId)\n  }\n\n  const handleMetricClick = () => {\n    mySwitch(\"click_metrics\")\n    history.push(\"/patients/anthropometrics/\"+ patientId)\n  }\n\n  const handleSymClick = () => {\n    mySwitch(\"click_symptoms\")\n    history.push(\"/patients/symptoms/\"+ patientId)\n  }\n\n  const handleDiaClick = () => {\n    history.push(\"/patients/diagnostics/\"+ patientId)\n    mySwitch(\"click_diagnostics\")\n  }\n\n\n  const theme = useTheme();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  //for nested list\n  const handleClick = () => {\n    setOpenNested(!openNested);\n  };\n\n  //logout\n  const handleLogout = () => {\n    dispatch({type: 'LOGOUT'});\n    setLogout(true)\n    history.push(\"/login\")\n  };\n\n  //get patient data (metrics, symptoms, diagnostics) counts\n  useEffect(() => {\n    setCountMetrics(patientData.num_metrics)\n    setCountDiagnostics(patientData.num_diagnostics)\n    setCountSymptoms(patientData.num_symptoms)\n  }, [patientData])\n\n  useEffect(() => {\n    const { pathname } = location;\n    api.get(\"/healthworkers/number\")\n        .then(res => {\n          setCountDoctors(res.data.count)\n        })\n        .catch(error=> {\n            setCountDoctors(0)\n        })\n      \n    api.get(\"/patients/number\")\n      .then(res => {\n        setCountPatient(res.data.count)\n      })\n      .catch(error=> {\n        setCountPatient(0)\n      })\n  }, [location.pathname])\n\n  useEffect(() => {\n    const { pathname } = location;\n    const storedUser = JSON.parse(window.localStorage.getItem('login'));\n    let userToken = {}\n    if(storedUser){\n      setHealthworker({\n        _id: storedUser.id,\n        firstname: storedUser.fname,\n        lastname: storedUser.lname\n      })\n      userToken = {\n        headers: {\n          Authorization: \"Bearer \" + storedUser.token\n        }\n      }\n\n      //check if token is still valid - do a test api call\n      api.get(\"/healthworkers/verify/\"+storedUser.id, userToken)\n        .then(res => {\n          //relogin so as to stay new token details\n          dispatch({type: 'LOGIN', healthworker:{login: true, id: res.data._id, token: res.data.token, fname: res.data.fname, lname: res.data.lname}});\n          setLogout(false)\n        })\n        .catch(err => {\n          setLogout(true)\n          history.push(\"/healthworker/logout\")\n        })\n\n\n    }else{\n      //no token so redirect to login page\n      setLogout(true)\n      dispatch({type: 'LOGOUT'});\n      if(location.pathname === \"/login\"){\n        history.push(\"/login\")\n      }else{\n        history.push(\"/signup\")\n      }\n      \n    }\n\n  }, [location.pathname])\n\n  useEffect(() => {\n    \n    const { pathname } = location;\n    if(pathname === \"/patients\" || pathname === \"/healthworkers\" || pathname === \"/signup\" || pathname === \"/login\" || pathname.startsWith(\"/dashboard/\") || pathname === (\"/healthworker/logout\")){\n      setShowPatientMenu(false)\n    }\n    if(pathname.startsWith(\"/patients/biodata/\") || pathname.startsWith(\"/patients/anthropometrics/\") || pathname.startsWith(\"/patients/symptoms/\") || pathname.startsWith(\"/patients/diagnostics/\")){\n      setShowPatientMenu(true)\n      setOpenNested(true)\n      let path_data = pathname.split(\"/\")\n      let patient_id = path_data[path_data.length - 1]\n      setPatientId(patient_id)\n    }\n  }, [location.pathname]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          \n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Medilinkup\n          </Typography>\n\n          {patientMenu\n          ? <div>\n            <Button onClick={() => history.push(\"/patients/biodata/\"+ patientId)} color=\"inherit\">Bio</Button>\n            <Button onClick={() => history.push(\"/patients/anthropometrics/\"+ patientId)} color=\"inherit\">Anthropometrics</Button>\n            <Button onClick={() => history.push(\"/patients/symptoms/\"+ patientId)} color=\"inherit\">Symptoms</Button>\n            <Button onClick={() => history.push(\"/patients/diagnostics/\"+ patientId)} color=\"inherit\">Diagnostics</Button>\n            <Button onClick={() => history.push(\"/patients/charts/\"+ patientId)} color=\"inherit\">Charts</Button>\n            </div>\n          : <div></div>\n          }\n\n          \n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <div className={classes.logo}>\n            <h2>MEDILINKUP</h2>\n          </div>\n\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        {!logout ?\n        <div>\n        <List component=\"nav\" aria-label=\"main mailbox folders\" style={{paddingRight: 15}}>\n          <ListItem className={classes.listItems} button onClick={() => history.push(\"/healthworkers\")}>\n            <ListItemIcon>\n              <Avatar maxInitials={1} size={40} round={true} name={healthworker.firstname} />\n            </ListItemIcon>\n            <ListItemText primary={healthworker.firstname + \" \" + healthworker.lastname} />\n          </ListItem>\n        </List>\n        </div>\n        :<div></div>}\n        <Divider />\n        <Divider />\n          {!logout ?\n          <div>\n          <List component=\"nav\" aria-label=\"main mailbox folders\" style={{paddingRight: 15}}>\n            <ListItem className={dashClicked ? classes.listItemDone : classes.listItems} button onClick={handleDashboardClick}>\n              <ListItemIcon>\n                <DashboardIcon className={classes.icon_color} />\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n\n            <ListItem className={profileClicked ? classes.listItemDone : classes.listItems} button onClick={handleProfileClick}>\n              <ListItemIcon>\n                <AccountCircleIcon className={classes.icon_color} />\n              </ListItemIcon>\n              <ListItemText primary=\"Profile\" />\n            </ListItem>\n            <ListItem className={doctorClicked ? classes.listItemDone : classes.listItems} button onClick={handleDoctorClick}>\n              <ListItemIcon>\n                <Badge color=\"secondary\" badgeContent={countDoctors}>\n                    <LocalHospitalIcon className={classes.icon_color} />    \n                  </Badge>\n              </ListItemIcon>\n              <ListItemText primary=\"Doctors\" />\n            </ListItem>\n\n            <ListItem className={classes.listItems} button onClick={handleClick}>\n              <ListItemIcon>\n              <Badge color=\"secondary\" badgeContent={countPatient}>\n                <GroupIcon className={classes.icon_color} />   \n              </Badge>\n                \n              </ListItemIcon>\n              <ListItemText primary=\"Patients\" />\n              {openNested ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={openNested} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" style={{paddingRight: 10}}>\n                <ListItem className={patientClicked ? classes.nestedDone : classes.nested} button onClick={handlePatientsClick} >\n                  <ListItemIcon>\n                    <Badge color=\"secondary\" badgeContent={countPatient}>\n                      <ViewListIcon className={classes.icon_color} />    \n                    </Badge>\n                  </ListItemIcon>\n                  <ListItemText primary=\"List\" />\n                </ListItem>\n\n              {patientMenu\n              ?\n                <div>\n                <ListItem button onClick={handleBioClick} className={bioClicked ? classes.nestedDone : classes.nested}>\n                  <ListItemIcon>\n                    <FingerprintIcon className={classes.icon_color} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Bio\" />\n                </ListItem>\n\n                <ListItem button onClick={handleMetricClick} className={metricClicked ? classes.nestedDone : classes.nested}>\n                  <ListItemIcon>\n                    <Badge color=\"secondary\" badgeContent={countMetrics}>\n                      <PersonIcon className={classes.icon_color} />    \n                    </Badge>\n\n                  </ListItemIcon>\n                  <ListItemText primary=\"Anthropometrics\" />\n                </ListItem>\n\n                <ListItem button onClick={handleSymClick} className={symClicked ? classes.nestedDone : classes.nested}>\n                  <ListItemIcon>\n                    <Badge color=\"secondary\" badgeContent={countSymptoms}>\n                      <StarBorder className={classes.icon_color} />    \n                    </Badge>\n\n                  </ListItemIcon>\n                  <ListItemText primary=\"Symptoms\" />\n                </ListItem>\n\n                <ListItem button onClick={handleDiaClick} className={diaClicked ? classes.nestedDone : classes.nested}>\n                  <ListItemIcon>\n                    <Badge color=\"secondary\" badgeContent={countDiagnostics}>\n                      <RadioButtonCheckedIcon className={classes.icon_color} />    \n                    </Badge>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Diagnostics\" />\n                </ListItem>\n\n                <ListItem button onClick={() => history.push(\"/patients/charts/\"+ patientId)} className={classes.nested}>\n                  <ListItemIcon>\n                    <TimelineIcon className={classes.icon_color} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Charts\" />\n                </ListItem>\n                </div>\n              : <div></div>\n              }\n              </List>\n            </Collapse>\n\n            <ListItem className={classes.listItems} button onClick={handleLogout}>\n              <ListItemIcon>\n                  <ExitToAppIcon className={classes.icon_color} />    \n              </ListItemIcon>\n              <ListItemText primary=\"LOGOUT\" />\n            </ListItem>\n          </List>\n          </div>\n          :<div></div>\n          }\n\n  \n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n          <div className={classes.toolbar} />\n        \n            <div>\n                {iserror && \n                    <Alert severity=\"error\">\n                        {errorMessages.map((msg, i) => {\n                            return <div key={i}>{msg}</div>\n                        })}\n                    </Alert>\n                }\n\n          <Switch>\n            <Route exact path=\"/healthworkers\" component={HealthWorkers} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/dashboard/:id\" component={Dashboard} />\n            <Route exact path=\"/profile/:id\" component={Profile} />\n            <Route exact path=\"/healthworkers\" component={HealthWorkers} />\n            <Route exact path=\"/healthworker/logout\" component={SignedOut} />\n            <Route exact path=\"/patients\" component={Patients} />\n            <Route exact path=\"/patients/dashboard/:id\" component={Dashboard} />\n            <Route exact path=\"/patients/biodata/:id\" component={Bio} />\n            <Route exact path=\"/patients/anthropometrics/:id\" component={Metrics} />\n            <Route exact path=\"/patients/symptoms/:id\" component={Symptoms} />\n            <Route exact path=\"/patients/diagnostics/:id\" component={Diagnostics} />  \n\n          </Switch>\n        </div>\n\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Main from './components/main/Main'\nimport LoginContextProvider from './context/LoginContext'\nimport MenuContextProvider from './context/MenuContext'\nimport PatientContextProvider from './context/PatientContext'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n        <LoginContextProvider>\n        <MenuContextProvider>\n        <PatientContextProvider>\n        <Route path=\"/\" component={Main} />\n        </PatientContextProvider>\n        </MenuContextProvider>\n        </LoginContextProvider>\n      </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}